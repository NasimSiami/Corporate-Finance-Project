{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#  **<span style=\"color:red\"> Topics in Corporate Finance </span>** \n",
    "\n",
    "## <span style=\"color:green\"> Assignment 3</span> \n",
    "\n",
    "### <span style=\"color:blue\">Nasim Siami        (11306186)</span>\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np \n",
    "import statsmodels.api as sm \n",
    "import datetime as dt\n",
    "import statsmodels.formula.api as sm\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy.stats import wilcoxon\n",
    "\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore')\n",
    "warnings.simplefilter('ignore')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Reading the data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>ticker</th>\n",
       "      <th>cusip</th>\n",
       "      <th>ret</th>\n",
       "      <th>vwretd</th>\n",
       "      <th>meanest</th>\n",
       "      <th>actual</th>\n",
       "      <th>announcementDate</th>\n",
       "      <th>group_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2012-10-02</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.028441</td>\n",
       "      <td>0.001179</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012-10-03</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.019828</td>\n",
       "      <td>0.002520</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012-10-04</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.013303</td>\n",
       "      <td>0.007665</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-10-05</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.008556</td>\n",
       "      <td>-0.000143</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012-10-08</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.000262</td>\n",
       "      <td>-0.003573</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2725885</th>\n",
       "      <td>2014-12-24</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.000595</td>\n",
       "      <td>0.000586</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2725886</th>\n",
       "      <td>2014-12-26</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.000993</td>\n",
       "      <td>0.003668</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2725887</th>\n",
       "      <td>2014-12-29</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>0.006659</td>\n",
       "      <td>0.001236</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2725888</th>\n",
       "      <td>2014-12-30</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.004344</td>\n",
       "      <td>-0.004281</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2725889</th>\n",
       "      <td>2014-12-31</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.002578</td>\n",
       "      <td>-0.008785</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2725890 rows Ã— 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               date ticker     cusip       ret    vwretd  meanest  actual  \\\n",
       "0        2012-10-02    ADT  00101J10  0.028441  0.001179     0.42    0.41   \n",
       "1        2012-10-03    ADT  00101J10  0.019828  0.002520     0.42    0.41   \n",
       "2        2012-10-04    ADT  00101J10 -0.013303  0.007665     0.42    0.41   \n",
       "3        2012-10-05    ADT  00101J10 -0.008556 -0.000143     0.42    0.41   \n",
       "4        2012-10-08    ADT  00101J10 -0.000262 -0.003573     0.42    0.41   \n",
       "...             ...    ...       ...       ...       ...      ...     ...   \n",
       "2725885  2014-12-24   AVGO  Y0486S10 -0.000595  0.000586     1.68    1.99   \n",
       "2725886  2014-12-26   AVGO  Y0486S10 -0.000993  0.003668     1.68    1.99   \n",
       "2725887  2014-12-29   AVGO  Y0486S10  0.006659  0.001236     1.68    1.99   \n",
       "2725888  2014-12-30   AVGO  Y0486S10 -0.004344 -0.004281     1.68    1.99   \n",
       "2725889  2014-12-31   AVGO  Y0486S10 -0.002578 -0.008785     1.68    1.99   \n",
       "\n",
       "        announcementDate  group_id  \n",
       "0             2013-05-01         1  \n",
       "1             2013-05-01         1  \n",
       "2             2013-05-01         1  \n",
       "3             2013-05-01         1  \n",
       "4             2013-05-01         1  \n",
       "...                  ...       ...  \n",
       "2725885       2014-12-03      4426  \n",
       "2725886       2014-12-03      4426  \n",
       "2725887       2014-12-03      4426  \n",
       "2725888       2014-12-03      4426  \n",
       "2725889       2014-12-03      4426  \n",
       "\n",
       "[2725890 rows x 9 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Reading the data\n",
    "df= pd.read_csv('Data.csv')\n",
    "# Converting date and announcement date to datetime\n",
    "df['date'] = pd.to_datetime(df.date).dt.date\n",
    "df['announcementDate'] = pd.to_datetime(df.announcementDate).dt.date\n",
    "# Dropping rows with NaN values and resetting index\n",
    "df =df.dropna()\n",
    "df = df.reset_index(drop=True)\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Criteria for Good and Bad news: \n",
    "\n",
    "If the actual exceeds expected by more than 2.5 percent the announcment is designated as good news, \n",
    "if the actual is more than 2.5 percent less than expected the announcement is designated as bad news."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>ticker</th>\n",
       "      <th>cusip</th>\n",
       "      <th>ret</th>\n",
       "      <th>vwretd</th>\n",
       "      <th>meanest</th>\n",
       "      <th>actual</th>\n",
       "      <th>announcementDate</th>\n",
       "      <th>group_id</th>\n",
       "      <th>good</th>\n",
       "      <th>bad</th>\n",
       "      <th>news categories</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2012-10-02</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.028441</td>\n",
       "      <td>0.001179</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012-10-03</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.019828</td>\n",
       "      <td>0.002520</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012-10-04</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.013303</td>\n",
       "      <td>0.007665</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-10-05</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.008556</td>\n",
       "      <td>-0.000143</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012-10-08</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.000262</td>\n",
       "      <td>-0.003573</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2725885</th>\n",
       "      <td>2014-12-24</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.000595</td>\n",
       "      <td>0.000586</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2725886</th>\n",
       "      <td>2014-12-26</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.000993</td>\n",
       "      <td>0.003668</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2725887</th>\n",
       "      <td>2014-12-29</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>0.006659</td>\n",
       "      <td>0.001236</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2725888</th>\n",
       "      <td>2014-12-30</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.004344</td>\n",
       "      <td>-0.004281</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2725889</th>\n",
       "      <td>2014-12-31</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.002578</td>\n",
       "      <td>-0.008785</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2725890 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               date ticker     cusip       ret    vwretd  meanest  actual  \\\n",
       "0        2012-10-02    ADT  00101J10  0.028441  0.001179     0.42    0.41   \n",
       "1        2012-10-03    ADT  00101J10  0.019828  0.002520     0.42    0.41   \n",
       "2        2012-10-04    ADT  00101J10 -0.013303  0.007665     0.42    0.41   \n",
       "3        2012-10-05    ADT  00101J10 -0.008556 -0.000143     0.42    0.41   \n",
       "4        2012-10-08    ADT  00101J10 -0.000262 -0.003573     0.42    0.41   \n",
       "...             ...    ...       ...       ...       ...      ...     ...   \n",
       "2725885  2014-12-24   AVGO  Y0486S10 -0.000595  0.000586     1.68    1.99   \n",
       "2725886  2014-12-26   AVGO  Y0486S10 -0.000993  0.003668     1.68    1.99   \n",
       "2725887  2014-12-29   AVGO  Y0486S10  0.006659  0.001236     1.68    1.99   \n",
       "2725888  2014-12-30   AVGO  Y0486S10 -0.004344 -0.004281     1.68    1.99   \n",
       "2725889  2014-12-31   AVGO  Y0486S10 -0.002578 -0.008785     1.68    1.99   \n",
       "\n",
       "        announcementDate  group_id    good     bad news categories  \n",
       "0             2013-05-01         1  0.4305  0.4095              NN  \n",
       "1             2013-05-01         1  0.4305  0.4095              NN  \n",
       "2             2013-05-01         1  0.4305  0.4095              NN  \n",
       "3             2013-05-01         1  0.4305  0.4095              NN  \n",
       "4             2013-05-01         1  0.4305  0.4095              NN  \n",
       "...                  ...       ...     ...     ...             ...  \n",
       "2725885       2014-12-03      4426  1.7220  1.6380              GN  \n",
       "2725886       2014-12-03      4426  1.7220  1.6380              GN  \n",
       "2725887       2014-12-03      4426  1.7220  1.6380              GN  \n",
       "2725888       2014-12-03      4426  1.7220  1.6380              GN  \n",
       "2725889       2014-12-03      4426  1.7220  1.6380              GN  \n",
       "\n",
       "[2725890 rows x 12 columns]"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Good News\n",
    "df['good'] = df['meanest']*(1.025)\n",
    "\n",
    "# Bad News\n",
    "df['bad'] = df['meanest']*(0.975)\n",
    "\n",
    "# Below we assign news category to announcements \n",
    "categories = [(df['good'] < df['actual']) , (df['bad'] <= df['actual']) & (df['actual'] <= df['good']),              (df['bad'] > df['actual'])]\n",
    "types= ['GN','NN','BN']\n",
    "df['news categories'] = np.select(categories , types)\n",
    "\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>ticker</th>\n",
       "      <th>cusip</th>\n",
       "      <th>ret</th>\n",
       "      <th>vwretd</th>\n",
       "      <th>meanest</th>\n",
       "      <th>actual</th>\n",
       "      <th>announcementDate</th>\n",
       "      <th>group_id</th>\n",
       "      <th>good</th>\n",
       "      <th>bad</th>\n",
       "      <th>news categories</th>\n",
       "      <th>delta days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2012-10-02</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.028441</td>\n",
       "      <td>0.001179</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012-10-03</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.019828</td>\n",
       "      <td>0.002520</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012-10-04</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.013303</td>\n",
       "      <td>0.007665</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-10-05</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.008556</td>\n",
       "      <td>-0.000143</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2012-10-08</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.000262</td>\n",
       "      <td>-0.003573</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2725885</th>\n",
       "      <td>2014-12-24</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.000595</td>\n",
       "      <td>0.000586</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2725886</th>\n",
       "      <td>2014-12-26</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.000993</td>\n",
       "      <td>0.003668</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2725887</th>\n",
       "      <td>2014-12-29</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>0.006659</td>\n",
       "      <td>0.001236</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2725888</th>\n",
       "      <td>2014-12-30</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.004344</td>\n",
       "      <td>-0.004281</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2725889</th>\n",
       "      <td>2014-12-31</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.002578</td>\n",
       "      <td>-0.008785</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2725890 rows Ã— 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "               date ticker     cusip       ret    vwretd  meanest  actual  \\\n",
       "0        2012-10-02    ADT  00101J10  0.028441  0.001179     0.42    0.41   \n",
       "1        2012-10-03    ADT  00101J10  0.019828  0.002520     0.42    0.41   \n",
       "2        2012-10-04    ADT  00101J10 -0.013303  0.007665     0.42    0.41   \n",
       "3        2012-10-05    ADT  00101J10 -0.008556 -0.000143     0.42    0.41   \n",
       "4        2012-10-08    ADT  00101J10 -0.000262 -0.003573     0.42    0.41   \n",
       "...             ...    ...       ...       ...       ...      ...     ...   \n",
       "2725885  2014-12-24   AVGO  Y0486S10 -0.000595  0.000586     1.68    1.99   \n",
       "2725886  2014-12-26   AVGO  Y0486S10 -0.000993  0.003668     1.68    1.99   \n",
       "2725887  2014-12-29   AVGO  Y0486S10  0.006659  0.001236     1.68    1.99   \n",
       "2725888  2014-12-30   AVGO  Y0486S10 -0.004344 -0.004281     1.68    1.99   \n",
       "2725889  2014-12-31   AVGO  Y0486S10 -0.002578 -0.008785     1.68    1.99   \n",
       "\n",
       "        announcementDate  group_id    good     bad news categories  \\\n",
       "0             2013-05-01         1  0.4305  0.4095              NN   \n",
       "1             2013-05-01         1  0.4305  0.4095              NN   \n",
       "2             2013-05-01         1  0.4305  0.4095              NN   \n",
       "3             2013-05-01         1  0.4305  0.4095              NN   \n",
       "4             2013-05-01         1  0.4305  0.4095              NN   \n",
       "...                  ...       ...     ...     ...             ...   \n",
       "2725885       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "2725886       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "2725887       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "2725888       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "2725889       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "\n",
       "             delta days  \n",
       "0        different days  \n",
       "1        different days  \n",
       "2        different days  \n",
       "3        different days  \n",
       "4        different days  \n",
       "...                 ...  \n",
       "2725885  different days  \n",
       "2725886  different days  \n",
       "2725887  different days  \n",
       "2725888  different days  \n",
       "2725889  different days  \n",
       "\n",
       "[2725890 rows x 13 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Making a function that tells if date and announcement date are same or not\n",
    "def same_or_different_days (date, announcement_date):\n",
    "    if date == announcement_date:\n",
    "        ans= \"same day\"\n",
    "    else: ans= \"different days\"\n",
    "    return ans\n",
    "\n",
    "# Applying the function to our dataframe df\n",
    "df['delta days'] = df[[\"date\", \"announcementDate\"]].apply(lambda x : same_or_different_days(*x), axis=1)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>ticker</th>\n",
       "      <th>cusip</th>\n",
       "      <th>ret</th>\n",
       "      <th>vwretd</th>\n",
       "      <th>meanest</th>\n",
       "      <th>actual</th>\n",
       "      <th>announcementDate</th>\n",
       "      <th>group_id</th>\n",
       "      <th>good</th>\n",
       "      <th>bad</th>\n",
       "      <th>news categories</th>\n",
       "      <th>delta days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2013-04-03</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.011190</td>\n",
       "      <td>-0.011847</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2013-04-04</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.024374</td>\n",
       "      <td>0.003815</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2013-04-05</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.033237</td>\n",
       "      <td>-0.003517</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2013-04-08</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.005613</td>\n",
       "      <td>0.006627</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2013-04-09</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.033706</td>\n",
       "      <td>0.003707</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149029</th>\n",
       "      <td>2014-12-24</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.000595</td>\n",
       "      <td>0.000586</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149030</th>\n",
       "      <td>2014-12-26</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.000993</td>\n",
       "      <td>0.003668</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149031</th>\n",
       "      <td>2014-12-29</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>0.006659</td>\n",
       "      <td>0.001236</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149032</th>\n",
       "      <td>2014-12-30</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.004344</td>\n",
       "      <td>-0.004281</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149033</th>\n",
       "      <td>2014-12-31</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.002578</td>\n",
       "      <td>-0.008785</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>149034 rows Ã— 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              date ticker     cusip       ret    vwretd  meanest  actual  \\\n",
       "0       2013-04-03    ADT  00101J10 -0.011190 -0.011847     0.42    0.41   \n",
       "1       2013-04-04    ADT  00101J10 -0.024374  0.003815     0.42    0.41   \n",
       "2       2013-04-05    ADT  00101J10  0.033237 -0.003517     0.42    0.41   \n",
       "3       2013-04-08    ADT  00101J10  0.005613  0.006627     0.42    0.41   \n",
       "4       2013-04-09    ADT  00101J10 -0.033706  0.003707     0.42    0.41   \n",
       "...            ...    ...       ...       ...       ...      ...     ...   \n",
       "149029  2014-12-24   AVGO  Y0486S10 -0.000595  0.000586     1.68    1.99   \n",
       "149030  2014-12-26   AVGO  Y0486S10 -0.000993  0.003668     1.68    1.99   \n",
       "149031  2014-12-29   AVGO  Y0486S10  0.006659  0.001236     1.68    1.99   \n",
       "149032  2014-12-30   AVGO  Y0486S10 -0.004344 -0.004281     1.68    1.99   \n",
       "149033  2014-12-31   AVGO  Y0486S10 -0.002578 -0.008785     1.68    1.99   \n",
       "\n",
       "       announcementDate  group_id    good     bad news categories  \\\n",
       "0            2013-05-01         1  0.4305  0.4095              NN   \n",
       "1            2013-05-01         1  0.4305  0.4095              NN   \n",
       "2            2013-05-01         1  0.4305  0.4095              NN   \n",
       "3            2013-05-01         1  0.4305  0.4095              NN   \n",
       "4            2013-05-01         1  0.4305  0.4095              NN   \n",
       "...                 ...       ...     ...     ...             ...   \n",
       "149029       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "149030       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "149031       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "149032       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "149033       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "\n",
       "            delta days  \n",
       "0       different days  \n",
       "1       different days  \n",
       "2       different days  \n",
       "3       different days  \n",
       "4       different days  \n",
       "...                ...  \n",
       "149029  different days  \n",
       "149030  different days  \n",
       "149031  different days  \n",
       "149032  different days  \n",
       "149033  different days  \n",
       "\n",
       "[149034 rows x 13 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Picking all rows where date = announcement date\n",
    "index_of_same_dates= (df.loc[df['delta days'] == 'same day']).index.values.tolist()\n",
    "\n",
    "# Below we make a new dataframe called \"event_window\"\n",
    "# For all announcement dates we add to this dataframe data for 20 days before and after\n",
    "event_window= pd.DataFrame()\n",
    "count= 0\n",
    "while count<len(index_of_same_dates):\n",
    "    new= df.iloc[index_of_same_dates[count] - 20 : index_of_same_dates[count] + 21]        \n",
    "    event_window= pd.concat([event_window, new],ignore_index = True)\n",
    "    count= count+1\n",
    "event_window"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>ticker</th>\n",
       "      <th>cusip</th>\n",
       "      <th>ret</th>\n",
       "      <th>vwretd</th>\n",
       "      <th>meanest</th>\n",
       "      <th>actual</th>\n",
       "      <th>announcementDate</th>\n",
       "      <th>group_id</th>\n",
       "      <th>good</th>\n",
       "      <th>bad</th>\n",
       "      <th>news categories</th>\n",
       "      <th>delta days</th>\n",
       "      <th>event window</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2013-04-03</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.011190</td>\n",
       "      <td>-0.011847</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "      <td>-20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2013-04-04</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.024374</td>\n",
       "      <td>0.003815</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "      <td>-19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2013-04-05</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.033237</td>\n",
       "      <td>-0.003517</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "      <td>-18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2013-04-08</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.005613</td>\n",
       "      <td>0.006627</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "      <td>-17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2013-04-09</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.033706</td>\n",
       "      <td>0.003707</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "      <td>-16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149029</th>\n",
       "      <td>2014-12-24</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.000595</td>\n",
       "      <td>0.000586</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149030</th>\n",
       "      <td>2014-12-26</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.000993</td>\n",
       "      <td>0.003668</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149031</th>\n",
       "      <td>2014-12-29</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>0.006659</td>\n",
       "      <td>0.001236</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149032</th>\n",
       "      <td>2014-12-30</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.004344</td>\n",
       "      <td>-0.004281</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149033</th>\n",
       "      <td>2014-12-31</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.002578</td>\n",
       "      <td>-0.008785</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>149034 rows Ã— 14 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              date ticker     cusip       ret    vwretd  meanest  actual  \\\n",
       "0       2013-04-03    ADT  00101J10 -0.011190 -0.011847     0.42    0.41   \n",
       "1       2013-04-04    ADT  00101J10 -0.024374  0.003815     0.42    0.41   \n",
       "2       2013-04-05    ADT  00101J10  0.033237 -0.003517     0.42    0.41   \n",
       "3       2013-04-08    ADT  00101J10  0.005613  0.006627     0.42    0.41   \n",
       "4       2013-04-09    ADT  00101J10 -0.033706  0.003707     0.42    0.41   \n",
       "...            ...    ...       ...       ...       ...      ...     ...   \n",
       "149029  2014-12-24   AVGO  Y0486S10 -0.000595  0.000586     1.68    1.99   \n",
       "149030  2014-12-26   AVGO  Y0486S10 -0.000993  0.003668     1.68    1.99   \n",
       "149031  2014-12-29   AVGO  Y0486S10  0.006659  0.001236     1.68    1.99   \n",
       "149032  2014-12-30   AVGO  Y0486S10 -0.004344 -0.004281     1.68    1.99   \n",
       "149033  2014-12-31   AVGO  Y0486S10 -0.002578 -0.008785     1.68    1.99   \n",
       "\n",
       "       announcementDate  group_id    good     bad news categories  \\\n",
       "0            2013-05-01         1  0.4305  0.4095              NN   \n",
       "1            2013-05-01         1  0.4305  0.4095              NN   \n",
       "2            2013-05-01         1  0.4305  0.4095              NN   \n",
       "3            2013-05-01         1  0.4305  0.4095              NN   \n",
       "4            2013-05-01         1  0.4305  0.4095              NN   \n",
       "...                 ...       ...     ...     ...             ...   \n",
       "149029       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "149030       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "149031       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "149032       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "149033       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "\n",
       "            delta days  event window  \n",
       "0       different days           -20  \n",
       "1       different days           -19  \n",
       "2       different days           -18  \n",
       "3       different days           -17  \n",
       "4       different days           -16  \n",
       "...                ...           ...  \n",
       "149029  different days            15  \n",
       "149030  different days            16  \n",
       "149031  different days            17  \n",
       "149032  different days            18  \n",
       "149033  different days            19  \n",
       "\n",
       "[149034 rows x 14 columns]"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Create a column with the respective days for the event window +/- 20\n",
    "ran = list(range(-20,21))\n",
    "length = len(event_window[event_window['delta days'] == 'same day'])\n",
    "event_window['event window'] = pd.DataFrame((ran*length), columns = ['count'])\n",
    "\n",
    "event_window"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>ticker</th>\n",
       "      <th>cusip</th>\n",
       "      <th>ret</th>\n",
       "      <th>vwretd</th>\n",
       "      <th>meanest</th>\n",
       "      <th>actual</th>\n",
       "      <th>announcementDate</th>\n",
       "      <th>group_id</th>\n",
       "      <th>good</th>\n",
       "      <th>bad</th>\n",
       "      <th>news categories</th>\n",
       "      <th>delta days</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2013-04-04</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.024374</td>\n",
       "      <td>0.003815</td>\n",
       "      <td>0.45</td>\n",
       "      <td>0.49</td>\n",
       "      <td>2014-04-30</td>\n",
       "      <td>2</td>\n",
       "      <td>0.46125</td>\n",
       "      <td>0.43875</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2013-04-05</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.033237</td>\n",
       "      <td>-0.003517</td>\n",
       "      <td>0.45</td>\n",
       "      <td>0.49</td>\n",
       "      <td>2014-04-30</td>\n",
       "      <td>2</td>\n",
       "      <td>0.46125</td>\n",
       "      <td>0.43875</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2013-04-08</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.005613</td>\n",
       "      <td>0.006627</td>\n",
       "      <td>0.45</td>\n",
       "      <td>0.49</td>\n",
       "      <td>2014-04-30</td>\n",
       "      <td>2</td>\n",
       "      <td>0.46125</td>\n",
       "      <td>0.43875</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2013-04-09</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.033706</td>\n",
       "      <td>0.003707</td>\n",
       "      <td>0.45</td>\n",
       "      <td>0.49</td>\n",
       "      <td>2014-04-30</td>\n",
       "      <td>2</td>\n",
       "      <td>0.46125</td>\n",
       "      <td>0.43875</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2013-04-10</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.013330</td>\n",
       "      <td>0.011610</td>\n",
       "      <td>0.45</td>\n",
       "      <td>0.49</td>\n",
       "      <td>2014-04-30</td>\n",
       "      <td>2</td>\n",
       "      <td>0.46125</td>\n",
       "      <td>0.43875</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>908495</th>\n",
       "      <td>2014-10-28</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>0.032242</td>\n",
       "      <td>0.013728</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.72200</td>\n",
       "      <td>1.63800</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>908496</th>\n",
       "      <td>2014-10-29</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>0.008076</td>\n",
       "      <td>-0.002239</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.72200</td>\n",
       "      <td>1.63800</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>908497</th>\n",
       "      <td>2014-10-30</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.029336</td>\n",
       "      <td>0.004969</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.72200</td>\n",
       "      <td>1.63800</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>908498</th>\n",
       "      <td>2014-10-31</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>0.046850</td>\n",
       "      <td>0.011525</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.72200</td>\n",
       "      <td>1.63800</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>908499</th>\n",
       "      <td>2014-11-03</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>0.001043</td>\n",
       "      <td>-0.000676</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.72200</td>\n",
       "      <td>1.63800</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>908500 rows Ã— 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              date ticker     cusip       ret    vwretd  meanest  actual  \\\n",
       "0       2013-04-04    ADT  00101J10 -0.024374  0.003815     0.45    0.49   \n",
       "1       2013-04-05    ADT  00101J10  0.033237 -0.003517     0.45    0.49   \n",
       "2       2013-04-08    ADT  00101J10  0.005613  0.006627     0.45    0.49   \n",
       "3       2013-04-09    ADT  00101J10 -0.033706  0.003707     0.45    0.49   \n",
       "4       2013-04-10    ADT  00101J10  0.013330  0.011610     0.45    0.49   \n",
       "...            ...    ...       ...       ...       ...      ...     ...   \n",
       "908495  2014-10-28   AVGO  Y0486S10  0.032242  0.013728     1.68    1.99   \n",
       "908496  2014-10-29   AVGO  Y0486S10  0.008076 -0.002239     1.68    1.99   \n",
       "908497  2014-10-30   AVGO  Y0486S10 -0.029336  0.004969     1.68    1.99   \n",
       "908498  2014-10-31   AVGO  Y0486S10  0.046850  0.011525     1.68    1.99   \n",
       "908499  2014-11-03   AVGO  Y0486S10  0.001043 -0.000676     1.68    1.99   \n",
       "\n",
       "       announcementDate  group_id     good      bad news categories  \\\n",
       "0            2014-04-30         2  0.46125  0.43875              GN   \n",
       "1            2014-04-30         2  0.46125  0.43875              GN   \n",
       "2            2014-04-30         2  0.46125  0.43875              GN   \n",
       "3            2014-04-30         2  0.46125  0.43875              GN   \n",
       "4            2014-04-30         2  0.46125  0.43875              GN   \n",
       "...                 ...       ...      ...      ...             ...   \n",
       "908495       2014-12-03      4426  1.72200  1.63800              GN   \n",
       "908496       2014-12-03      4426  1.72200  1.63800              GN   \n",
       "908497       2014-12-03      4426  1.72200  1.63800              GN   \n",
       "908498       2014-12-03      4426  1.72200  1.63800              GN   \n",
       "908499       2014-12-03      4426  1.72200  1.63800              GN   \n",
       "\n",
       "            delta days  \n",
       "0       different days  \n",
       "1       different days  \n",
       "2       different days  \n",
       "3       different days  \n",
       "4       different days  \n",
       "...                ...  \n",
       "908495  different days  \n",
       "908496  different days  \n",
       "908497  different days  \n",
       "908498  different days  \n",
       "908499  different days  \n",
       "\n",
       "[908500 rows x 13 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Below we make a new dataframe called \"estimation_window\"\n",
    "# For all announcement dates we add to this dataframe data for 270 and 20 days before the announcement\n",
    "estimation_window= pd.DataFrame()\n",
    "count= 0\n",
    "while count<len(index_of_same_dates):\n",
    "    new= df.iloc[index_of_same_dates[count] - 270 : index_of_same_dates[count] - 20]        \n",
    "    estimation_window= pd.concat([estimation_window, new],ignore_index = True)\n",
    "    count= count+1\n",
    "estimation_window"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>group_id</th>\n",
       "      <th>Normal_Return</th>\n",
       "      <th>date</th>\n",
       "      <th>ticker</th>\n",
       "      <th>cusip</th>\n",
       "      <th>ret</th>\n",
       "      <th>vwretd</th>\n",
       "      <th>meanest</th>\n",
       "      <th>actual</th>\n",
       "      <th>announcementDate</th>\n",
       "      <th>good</th>\n",
       "      <th>bad</th>\n",
       "      <th>news categories</th>\n",
       "      <th>delta days</th>\n",
       "      <th>event window</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2013-04-03</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.011190</td>\n",
       "      <td>-0.011847</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "      <td>-20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2013-04-04</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.024374</td>\n",
       "      <td>0.003815</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "      <td>-19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2013-04-05</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.033237</td>\n",
       "      <td>-0.003517</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "      <td>-18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2013-04-08</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.005613</td>\n",
       "      <td>0.006627</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "      <td>-17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2013-04-09</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.033706</td>\n",
       "      <td>0.003707</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "      <td>-16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149029</th>\n",
       "      <td>4426</td>\n",
       "      <td>0.002898</td>\n",
       "      <td>2014-12-24</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.000595</td>\n",
       "      <td>0.000586</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149030</th>\n",
       "      <td>4426</td>\n",
       "      <td>0.002898</td>\n",
       "      <td>2014-12-26</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.000993</td>\n",
       "      <td>0.003668</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149031</th>\n",
       "      <td>4426</td>\n",
       "      <td>0.002898</td>\n",
       "      <td>2014-12-29</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>0.006659</td>\n",
       "      <td>0.001236</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149032</th>\n",
       "      <td>4426</td>\n",
       "      <td>0.002898</td>\n",
       "      <td>2014-12-30</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.004344</td>\n",
       "      <td>-0.004281</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149033</th>\n",
       "      <td>4426</td>\n",
       "      <td>0.002898</td>\n",
       "      <td>2014-12-31</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.002578</td>\n",
       "      <td>-0.008785</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>149034 rows Ã— 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        group_id  Normal_Return        date ticker     cusip       ret  \\\n",
       "0              1            NaN  2013-04-03    ADT  00101J10 -0.011190   \n",
       "1              1            NaN  2013-04-04    ADT  00101J10 -0.024374   \n",
       "2              1            NaN  2013-04-05    ADT  00101J10  0.033237   \n",
       "3              1            NaN  2013-04-08    ADT  00101J10  0.005613   \n",
       "4              1            NaN  2013-04-09    ADT  00101J10 -0.033706   \n",
       "...          ...            ...         ...    ...       ...       ...   \n",
       "149029      4426       0.002898  2014-12-24   AVGO  Y0486S10 -0.000595   \n",
       "149030      4426       0.002898  2014-12-26   AVGO  Y0486S10 -0.000993   \n",
       "149031      4426       0.002898  2014-12-29   AVGO  Y0486S10  0.006659   \n",
       "149032      4426       0.002898  2014-12-30   AVGO  Y0486S10 -0.004344   \n",
       "149033      4426       0.002898  2014-12-31   AVGO  Y0486S10 -0.002578   \n",
       "\n",
       "          vwretd  meanest  actual announcementDate    good     bad  \\\n",
       "0      -0.011847     0.42    0.41       2013-05-01  0.4305  0.4095   \n",
       "1       0.003815     0.42    0.41       2013-05-01  0.4305  0.4095   \n",
       "2      -0.003517     0.42    0.41       2013-05-01  0.4305  0.4095   \n",
       "3       0.006627     0.42    0.41       2013-05-01  0.4305  0.4095   \n",
       "4       0.003707     0.42    0.41       2013-05-01  0.4305  0.4095   \n",
       "...          ...      ...     ...              ...     ...     ...   \n",
       "149029  0.000586     1.68    1.99       2014-12-03  1.7220  1.6380   \n",
       "149030  0.003668     1.68    1.99       2014-12-03  1.7220  1.6380   \n",
       "149031  0.001236     1.68    1.99       2014-12-03  1.7220  1.6380   \n",
       "149032 -0.004281     1.68    1.99       2014-12-03  1.7220  1.6380   \n",
       "149033 -0.008785     1.68    1.99       2014-12-03  1.7220  1.6380   \n",
       "\n",
       "       news categories      delta days  event window  \n",
       "0                   NN  different days           -20  \n",
       "1                   NN  different days           -19  \n",
       "2                   NN  different days           -18  \n",
       "3                   NN  different days           -17  \n",
       "4                   NN  different days           -16  \n",
       "...                ...             ...           ...  \n",
       "149029              GN  different days            15  \n",
       "149030              GN  different days            16  \n",
       "149031              GN  different days            17  \n",
       "149032              GN  different days            18  \n",
       "149033              GN  different days            19  \n",
       "\n",
       "[149034 rows x 15 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Below we calculate the constant mean return model for each company\n",
    "cmr_model= pd.DataFrame(estimation_window.groupby('group_id')['ret'].mean())\n",
    "\n",
    "# Computing normal return in the event window (constant mean return model)\n",
    "cmr_data = pd.merge(cmr_model, event_window, how='right', on=['group_id'])\n",
    "cmr_data.rename({'ret_x': 'Normal_Return', 'ret_y': 'ret'}, axis=1, inplace=True)\n",
    "cmr_data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>ticker</th>\n",
       "      <th>cusip</th>\n",
       "      <th>ret</th>\n",
       "      <th>vwretd</th>\n",
       "      <th>meanest</th>\n",
       "      <th>actual</th>\n",
       "      <th>announcementDate</th>\n",
       "      <th>group_id</th>\n",
       "      <th>good</th>\n",
       "      <th>bad</th>\n",
       "      <th>news categories</th>\n",
       "      <th>delta days</th>\n",
       "      <th>event window</th>\n",
       "      <th>alpha</th>\n",
       "      <th>beta</th>\n",
       "      <th>Normal_return</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2013-04-03</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.011190</td>\n",
       "      <td>-0.011847</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "      <td>-20</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2013-04-04</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.024374</td>\n",
       "      <td>0.003815</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "      <td>-19</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2013-04-05</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.033237</td>\n",
       "      <td>-0.003517</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "      <td>-18</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2013-04-08</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>0.005613</td>\n",
       "      <td>0.006627</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "      <td>-17</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2013-04-09</td>\n",
       "      <td>ADT</td>\n",
       "      <td>00101J10</td>\n",
       "      <td>-0.033706</td>\n",
       "      <td>0.003707</td>\n",
       "      <td>0.42</td>\n",
       "      <td>0.41</td>\n",
       "      <td>2013-05-01</td>\n",
       "      <td>1</td>\n",
       "      <td>0.4305</td>\n",
       "      <td>0.4095</td>\n",
       "      <td>NN</td>\n",
       "      <td>different days</td>\n",
       "      <td>-16</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149029</th>\n",
       "      <td>2014-12-24</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.000595</td>\n",
       "      <td>0.000586</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "      <td>15</td>\n",
       "      <td>0.001973</td>\n",
       "      <td>1.704329</td>\n",
       "      <td>0.002971</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149030</th>\n",
       "      <td>2014-12-26</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.000993</td>\n",
       "      <td>0.003668</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "      <td>16</td>\n",
       "      <td>0.001973</td>\n",
       "      <td>1.704329</td>\n",
       "      <td>0.008224</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149031</th>\n",
       "      <td>2014-12-29</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>0.006659</td>\n",
       "      <td>0.001236</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "      <td>17</td>\n",
       "      <td>0.001973</td>\n",
       "      <td>1.704329</td>\n",
       "      <td>0.004080</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149032</th>\n",
       "      <td>2014-12-30</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.004344</td>\n",
       "      <td>-0.004281</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "      <td>18</td>\n",
       "      <td>0.001973</td>\n",
       "      <td>1.704329</td>\n",
       "      <td>-0.005324</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>149033</th>\n",
       "      <td>2014-12-31</td>\n",
       "      <td>AVGO</td>\n",
       "      <td>Y0486S10</td>\n",
       "      <td>-0.002578</td>\n",
       "      <td>-0.008785</td>\n",
       "      <td>1.68</td>\n",
       "      <td>1.99</td>\n",
       "      <td>2014-12-03</td>\n",
       "      <td>4426</td>\n",
       "      <td>1.7220</td>\n",
       "      <td>1.6380</td>\n",
       "      <td>GN</td>\n",
       "      <td>different days</td>\n",
       "      <td>19</td>\n",
       "      <td>0.001973</td>\n",
       "      <td>1.704329</td>\n",
       "      <td>-0.012999</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>149034 rows Ã— 17 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              date ticker     cusip       ret    vwretd  meanest  actual  \\\n",
       "0       2013-04-03    ADT  00101J10 -0.011190 -0.011847     0.42    0.41   \n",
       "1       2013-04-04    ADT  00101J10 -0.024374  0.003815     0.42    0.41   \n",
       "2       2013-04-05    ADT  00101J10  0.033237 -0.003517     0.42    0.41   \n",
       "3       2013-04-08    ADT  00101J10  0.005613  0.006627     0.42    0.41   \n",
       "4       2013-04-09    ADT  00101J10 -0.033706  0.003707     0.42    0.41   \n",
       "...            ...    ...       ...       ...       ...      ...     ...   \n",
       "149029  2014-12-24   AVGO  Y0486S10 -0.000595  0.000586     1.68    1.99   \n",
       "149030  2014-12-26   AVGO  Y0486S10 -0.000993  0.003668     1.68    1.99   \n",
       "149031  2014-12-29   AVGO  Y0486S10  0.006659  0.001236     1.68    1.99   \n",
       "149032  2014-12-30   AVGO  Y0486S10 -0.004344 -0.004281     1.68    1.99   \n",
       "149033  2014-12-31   AVGO  Y0486S10 -0.002578 -0.008785     1.68    1.99   \n",
       "\n",
       "       announcementDate  group_id    good     bad news categories  \\\n",
       "0            2013-05-01         1  0.4305  0.4095              NN   \n",
       "1            2013-05-01         1  0.4305  0.4095              NN   \n",
       "2            2013-05-01         1  0.4305  0.4095              NN   \n",
       "3            2013-05-01         1  0.4305  0.4095              NN   \n",
       "4            2013-05-01         1  0.4305  0.4095              NN   \n",
       "...                 ...       ...     ...     ...             ...   \n",
       "149029       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "149030       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "149031       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "149032       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "149033       2014-12-03      4426  1.7220  1.6380              GN   \n",
       "\n",
       "            delta days  event window     alpha      beta  Normal_return  \n",
       "0       different days           -20       NaN       NaN            NaN  \n",
       "1       different days           -19       NaN       NaN            NaN  \n",
       "2       different days           -18       NaN       NaN            NaN  \n",
       "3       different days           -17       NaN       NaN            NaN  \n",
       "4       different days           -16       NaN       NaN            NaN  \n",
       "...                ...           ...       ...       ...            ...  \n",
       "149029  different days            15  0.001973  1.704329       0.002971  \n",
       "149030  different days            16  0.001973  1.704329       0.008224  \n",
       "149031  different days            17  0.001973  1.704329       0.004080  \n",
       "149032  different days            18  0.001973  1.704329      -0.005324  \n",
       "149033  different days            19  0.001973  1.704329      -0.012999  \n",
       "\n",
       "[149034 rows x 17 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Below we calculate the market model for each company\n",
    "# We start by extracting all group IDs\n",
    "list_groupids= estimation_window['group_id'].unique()\n",
    "\n",
    "# We create a new dataframe\n",
    "ans= pd.DataFrame() \n",
    "\n",
    "# We run regression numerous times using loop to get alphas & betas for every group id\n",
    "for specific_id in list_groupids: \n",
    "    df = estimation_window[(estimation_window['group_id'] == specific_id)] \n",
    "    our_model = sm.ols('ret ~ vwretd', data = df).fit()\n",
    "    ans[specific_id] = our_model.params #extracting betas\n",
    "    \n",
    "    \n",
    "ans= ans.transpose()\n",
    "ans= ans.reset_index()\n",
    "ans= ans.rename({'index': 'group_id'}, axis=1)\n",
    "\n",
    "# Computing normal return in the event window (market model)\n",
    "mm_data = event_window.merge(ans, how='outer', on='group_id')\n",
    "mm_data.rename({'vwretd_x': 'vwretd', 'vwretd_y': 'beta', 'Intercept': 'alpha'}, axis=1, inplace=True)\n",
    "mm_data['Normal_return'] = mm_data['alpha'] + (mm_data['beta'] * mm_data['vwretd'])\n",
    "mm_data"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Abnormal Return for CMRM \n",
    "\n",
    "cmr_data['AR CMRM'] = cmr_data['ret'] - cmr_data['Normal_Return']\n",
    "cmr_data.dropna(inplace = True)\n",
    "\n",
    "#Abnormal Return for MM\n",
    "\n",
    "mm_data['AR MM'] = mm_data['ret'] - mm_data['Normal_return']\n",
    "mm_data.dropna(inplace = True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Create the Good News columns\n",
    "\n",
    "#CMRM\n",
    "good_news_CMRM = cmr_data.loc[(cmr_data['news categories'] == 'GN')]\n",
    "good_news_CMRM = good_news_CMRM.groupby('event window')['AR CMRM'].mean().to_frame()\n",
    "good_news_CMRM['CAR CMRM'] = good_news_CMRM['AR CMRM'].cumsum()\n",
    "\n",
    "#MM\n",
    "good_news_MM = mm_data.loc[(mm_data['news categories'] == 'GN')]\n",
    "good_news_MM = good_news_MM.groupby('event window')['AR MM'].mean().to_frame()\n",
    "good_news_MM['CAR MM'] = good_news_MM['AR MM'].cumsum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Create the No News columns\n",
    "\n",
    "#CMRM\n",
    "no_news_CMRM = cmr_data.loc[(cmr_data['news categories'] == 'NN')]\n",
    "no_news_CMRM = no_news_CMRM.groupby('event window')['AR CMRM'].mean().to_frame()\n",
    "no_news_CMRM['CAR CMRM'] = no_news_CMRM['AR CMRM'].cumsum()\n",
    "\n",
    "#MM\n",
    "no_news_MM = mm_data.loc[(mm_data['news categories'] == 'NN')]\n",
    "no_news_MM = no_news_MM.groupby('event window')['AR MM'].mean().to_frame()\n",
    "no_news_MM['CAR MM'] = no_news_MM['AR MM'].cumsum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Create the Bad News columns\n",
    "\n",
    "#CMRM\n",
    "bad_news_CMRM = cmr_data.loc[(cmr_data['news categories'] == 'BN')]\n",
    "bad_news_CMRM = bad_news_CMRM.groupby('event window')['AR CMRM'].mean().to_frame()\n",
    "bad_news_CMRM['CAR CMRM'] = bad_news_CMRM['AR CMRM'].cumsum()\n",
    "\n",
    "#MM\n",
    "bad_news_MM = mm_data.loc[(mm_data['news categories'] == 'BN')]\n",
    "bad_news_MM = bad_news_MM.groupby('event window')['AR MM'].mean().to_frame()\n",
    "bad_news_MM['CAR MM'] = bad_news_MM['AR MM'].cumsum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Tables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [],
   "source": [
    "keys = ['Good News', 'No News', 'Bad News']\n",
    "\n",
    "CMRM_table = pd.concat([good_news_CMRM, no_news_CMRM, bad_news_CMRM], axis =1 ,keys = keys)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "keys = ['Good News', 'No News', 'Bad News']\n",
    "\n",
    "MM_table = pd.concat([good_news_MM, no_news_MM, bad_news_MM], axis =1 ,keys = keys)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### *These tables are at the bottom of the notebook*"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Graphs"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### CMRM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#CMRM Graph\n",
    "CMRM_table[[('Good News', 'CAR CMRM'), ('No News', 'CAR CMRM'), ('Bad News', 'CAR CMRM')]].plot(style = ['go-', 'ys-', 'r^-'], figsize = (12,6))\n",
    "plt.title('Constant Mean Return Model', fontsize = 15, fontweight = 'bold')\n",
    "plt.xlabel('Event Time', fontsize = 12)\n",
    "plt.ylabel('CAR', fontsize = 12)\n",
    "plt.rcParams['lines.linewidth'] = .5\n",
    "plt.legend(['Good News Firms', 'No News Firms', 'Bad News Firms'], loc = 'lower center', ncol = 5, bbox_to_anchor = (0.5, -0.18), shadow = True)\n",
    "plt.annotate('Figure 2b. Plot of cumulative abnormal return for earning announcements from event day -20 to event day 20. ', xy = (.08,-.2), xycoords='axes fraction', va = 'center')\n",
    "plt.annotate('The abnormal return is calculated using the constant mean return model as the normal return', xy = (.15,-.235), xycoords='axes fraction', va = 'center')\n",
    "plt.style.use('seaborn-white')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### MM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAA/IAAAJsCAYAAABeeZi/AAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/NK7nSAAAACXBIWXMAAA9hAAAPYQGoP6dpAADVh0lEQVR4nOzdeXhTVf7H8U+S7ntpy1Z2yr7IXhBwAxUURBFXXH6uo6jguI+OOjrj6Iw7LuOO66AMA84ACowgIzoKCAjIWpBCoWVpC93X5P7+uDaltKVpmzRJ+349T540yc2536QN5HPPuedYDMMwBAAAAAAA/ILV2wUAAAAAAADXEeQBAAAAAPAjBHkAAAAAAPwIQR4AAAAAAD9CkAcAAAAAwI8Q5AEAAAAA8CMEeQAAAAAA/AhBHgAAAAAAP0KQBwAAAADAjxDkAQBwo1deeUW9evWqcjl8+HC17a677roq25xzzjlNUtP777/vkX0cPHjQ5bZ98T36+OOPnft55ZVXGtTGgQMHnG1MmTLFzRUCAFCJIA8AgId9//33VW6XlJRo48aNXqrGvUpKSvTiiy9q4sSJWrFiRYPbac7vEQAA7kaQBwDAw/73v/9Vub1+/XqVlpZ6qRr32rdvn9544w2VlJQ0qp3m/B4BAOBuBHkAADykVatWkqqH1IreZ5vNppiYmKYuy6fwHgEAUH8EeQAAPGT48OGSpKNHjyolJcV5f0Vo7du3r8LDw2t8bmFhoZ5//nlNnDhRAwcO1IABAzR27FjNmjVL27dvr7LtQw895Dw3e8uWLbruuuvUv39/jR49WmvWrKm1vnvvvdf5vMsuu0wFBQXOx/bs2aN77rlHo0aNUv/+/TV+/Hj9+c9/VnZ2tnObBQsWaPLkyc7ba9euVa9evXTttdc2yXskSVlZWXrhhRd0wQUXaNCgQRo2bJiuueYaff755zIMo9r2xcXFevHFF3XOOedowIABmjx5sv7973+fssZDhw7p0Ucf1dixY9W/f3+deeaZeuSRR3TgwAGXXycAAO5EkAcAwENGjBjh/LkimObm5mrbtm3VHj+R3W7X7bffrrfeeku//PKLSkpKVFpaqiNHjmjp0qW66qqr9Msvv9T43JkzZ2rNmjUqKytTXl6e+vXrV+N2L730khYvXixJ6tatm9566y1nYF63bp2mTZumJUuWKDs7W2VlZUpLS9MHH3ygSy+9VOnp6Q17Q2rQ0PdIkrZt26YpU6bozTff1J49e1RUVKS8vDytW7dODz74oO644w6VlZU5ty8rK9NNN92kN954QwcPHlRpaal27dql+++/X5999lmN+9izZ4+mTp2qefPm6ciRIyorK9OhQ4c0f/58TZ061VknAABNiSAPAICHJCUlVRs6vmbNGjkcDklScnJyjc9buXKlfvjhB0nSwIED9Ze//EV//etfdfrpp0uSioqK9MUXX9T43PT0dN166616+umnNWPGDEVERFTbZsGCBfrb3/4mSWrXrp3ee+89xcbGSpJKS0t17733qrCwUCEhIbr99tv1wgsv6Oabb1ZAQIDS09P1hz/8QZI0cuRIPfLII852e/Tooddee02zZs3y+HtUXFysWbNm6ejRo5Kk0aNH66mnntIDDzyghIQESdKKFSv04osvOp/z6aef6scff5QkBQcH64477tDTTz+tESNGaNeuXTXu54EHHlBWVpasVquuu+46Pf/887rrrrsUHh6unJwcPfDAAzX2/AMA4EkB3i4AAIDmymKxaPjw4Vq2bJnWrl2rsrIy57nfAQEBGjp0aI3PGzx4sF5//XXt3LlTl156qdq0aSPJHGY+adIkSdKRI0dqfO7ZZ5+te++9t9aa1q5dq2+++UaSFBMTo3fffVft2rVzPr5y5UrnUnAzZszQb37zG0nShRdeKLvdrjlz5uibb77RwYMHlZiYqJEjRzqfGxsbq/Hjx7v03lRo6Hu0ZMkS7d+/X5IZ4t99911ZLBZJ0nnnnacLL7xQJSUl+uijj5wHNE48+PHEE0/okksukSRddNFFuuCCC7Rv374q+9iyZYt+/vlnSdJll11W5aBFdHS0/vSnPyklJUU//vij8xQBAACaAj3yAAB4UEWPcmFhoTZt2uTsde7Xr1+NveWSFB8fr3Hjxummm27S/v379c4772jmzJm65pprnNucOGS8pv3VZsWKFc7nRkdHq2PHjlUe37x5s/PnF154oco67nPmzJEkGYahn3766ZT7qY+GvEcnLld3xRVXOEO8JHXs2FFjxoyRZI4wqFjG7sRz8CdMmOD8OSAgoMYDECe+F5999lmV9+JPf/qT8zGWyQMANDV65AEA8KATg/XChQu1d+/eavefzG636/nnn9enn37qnIAuKipKPXv2dA4Nr204d8UwdVfs27dPn3zyiW644Qbnfbm5uS49t6LX3h0a8h4dO3bM+XPFiIUTnXhfTk6OJPNAgSSFhIQoNDS0yvbx8fHV2vDGewEAgCsI8gAAeFBSUpLi4uKUlZWlhQsXOu8/VUj929/+pnfffVeSdOmll+qGG25QUlKS0tLSdO65555yfycH1JNZLBY98sgjevXVV3X8+HG9/vrrmjJlivMAwIkzxF933XW11tmtW7dT7qc+GvIenRi8awrShw4dcv5c8doiIyN1/PhxFRcXq6CgoMprzcrKqtbGiY9PmjRJEydOrLGW9u3b11onAACewNB6AAA8rOL8abvdLkkKDAzUkCFDat1++fLlzp9vv/129ejRQxaLxaUZ0q3WU//XfsMNN+jaa6/V7bffLsnsdX711Vedj/ft29f5c35+vsaPH++87Nq1S+vXr9fx48cVFxdXbX+NmfStvu/RiY999tlnVfadlpamb7/9VpLZ+37aaadVe23/+c9/nD+XlZVp2bJl1fZx4vZHjx6t8l5kZmbqhx9+UGZmpvO9AACgqdAjDwCAhyUnJ2vp0qXO2/3791dYWFit20dGRjp/fuSRR3TZZZdp7969ev/99533l5aWNqiWiiHnV199tT7++GOlpaXps88+0/Tp09W9e3eNHz9esbGxOnbsmBYsWCBJOv3007Vjxw69++67MgxDrVu3dq4fHxIS4mx7165dzh71ionkXFXf9+iCCy7QK6+8oqNHj+q7777TTTfdpAsvvFDHjx/XnDlznO/PjTfe6OxZv/jii53n3z/xxBM6cuSIEhIS9I9//ENpaWnV9jF06FB1795de/bs0Zo1azRjxgydd955OnTokF599VWVlZUpJCRE48aNq9drBQCgsQjyAAB42MlDxOuakO6KK65wngu/Zs0arVmzRpI5LD4gIEDl5eXKyMhoVE1BQUG655579Nvf/lbl5eV65pln9Pbbbys8PFx/+ctfnGuwL1iwwBnoK5739NNPKzg4WJI5rLxiWHxOTo4eeughde7cuUFB/lS3TxYZGalXXnlFM2bMUHZ2tr777jt99913VbaZMGGC7rzzTuftiy66SP/5z3/0n//8R4WFhXr++eedj51zzjlauXJlledbLBb99a9/1f/93/8pLy9PK1as0IoVK6o8/vjjjzuXuwMAoKkwtB4AAA/r3r17lbBXV0i96KKL9Oyz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IA8AAFxTMeEdAADwKoI8AABwDefJAwDgEwjyAADANQR5AAB8AkEeAAC4pm1b6fBhb1cBAECLR5AHAACuY8I7AAC8jiAPAABcN3CgtHmzt6sAAKBFI8gDAADXcZ48AABeR5AHAACuI8gDAOB1BHkAAOC6du2kjAxvVwEAQIvm00G+sLBQv/vd75ScnKyhQ4fqgQceUEFBQa3bb9q0SZdddpkGDx6sc845R//4xz9q3G7OnDm69tprPVU2AADNW3CwVFzs7SoAAGixfDrI//GPf1RGRoaWLVum5cuXKyMjQ88991yN2+bk5OjWW2/VxRdfrHXr1umpp57S008/rc0nTMhTWFioZ555Rs8880xTvQQAAJofJrwDAMCrfDbIFxUVadGiRZo5c6ZiYmIUFxen++67TwsWLFBRDcveLF++XDExMZo+fboCAgI0atQoTZ48WZ988olzmylTpujo0aO66qqrmvKlAADQvHCePAAAXhXgzZ0XFxfr8OHDNT5WVFSksrIy9ezZ03lf9+7dVVxcrNTUVPXp06fK9ikpKVW2laSkpCTNnz/fefujjz5S27Zt9corr2jPnj1ufCUAALQgQ4dK//63t6sAAKDF8mqQ37Rpk6677roaH5s1a5YkKSwszHlfaGioJNV4nnxBQYHz8QohISEqLCx03m7btm2jawYAoMVr315KT/d2FQAAtFheDfLJycnauXNnjY9t27ZNL7/8soqKihQeHi5JziH1ERER1bYPDQ1VXl5elfuKi4udzwUAAG5isVROeBcS4u1qAABocXz2HPmuXbsqMDBQu3fvdt63Z88eBQYGqkuXLtW279mzp1JSUqrct3v3bvXo0cPTpQIA0PIMGCBt2eLtKgAAaJF8NsiHhoZq4sSJeu6555Sdna3s7Gw999xzmjRpkkJqOPp/7rnnKjMzU++//77Kysr0ww8/aNGiRbr00ku9UD0AAM0cE94BAOA1PhvkJenxxx9Xly5dNHnyZE2YMEEdOnTQY4895nz8wgsv1BtvvCFJio2N1XvvvaelS5cqOTlZv//97/X73/9eI0eO9Fb5AAA0XwR5AAC8xmIYhuHtInzRuHHjJEkrVqzwciUAAPggw5AuvFD64gtvVwIAQLPhag716R55AADgoywWKShIKinxdiUAALQ4BHkAANAwAwZIP//s7SoAAGhxCPIAAKBhOE8eAACvIMgDAICGIcgDAOAVBHkAANAwHTpIBw54uwoAAFocgjwAAGgYi0UKDJRKS71dCQAALQpBHgAANFz//kx4BwBAEyPIAwCAhuM8eQAAmhxBHgAANBxBHgCAJkeQBwAADdexo5SW5u0qAABoUQjyAACg4ZjwDgCAJkeQBwAAjdOvn7R1q7erAACgxSDIAwCAxuE8eQAAmhRBHgAANA5BHgCAJkWQBwAAjdOpk7R/v7erAACgxSDIAwCAxrFYpIAAqazM25UAANAiEOQBAEDjMeEdAABNhiAPAAAaj/PkAQBoMgR5AADQeAR5AACaDEEeAAA0XufO0r593q4CAIAWgSAPAAAajwnvAABoMgR5AADgHn37Stu2ebsKAACaPYI8AABwD86TBwCgSRDkAQCAexDkAQBoEgR5AADgHl26SKmp3q4CAIBmjyAPAADcw2KRbDapvNzblQAA0KwR5AEAgPsw4R0AAB5HkAcAAO4zdKj04YdmoP/qK29XAwBAs0SQBwAA7jNkiPTRR9L27dLDD0uG4e2KAABodgjyAADAfVJSpCNHzJ/XrZOWL/duPQAANEMEeQAA4B6GIT32WOVtm0169FF65QEAcDOCPAAAcI/ly81e+Ap2O73yAAB4AEEeAAA0nmGYve82W9X76ZUHAMDtCPIAAKDxKnrj7faq99MrDwCA2xHkAQBA41T0xltr+VphtdIrDwCAGxHkAQBA45SWSvv3Sw5HzY87HFJamrkdAABotABvFwAAAPxccLA5fP7o0cr7Pv1U6thRGj3avN26tbkdAABoNII8AABovI4dzUsFu11atEgaMsR7NQEA0EwxtB4AALjfaadJmzZ5uwoAAJolgjwAAHC/oCCpvLz28+YBAECDEeQBAIBn9Okj7djh7SoAAGh2CPIAAMAzRo6UfvjB21UAANDsEOQBAIBnEOQBAPAIgjwAAPCMDh2kAwe8XQUAAM0OQR4AAHhOZKSUm+vtKgAAaFYI8gAAwHNGjJDWrfN2FQAANCsEeQAA4DmcJw8AgNsR5AEAgOcMGSKtX+/tKgAAaFYI8gAAwHNCQ6XiYskwvF0JAADNBkEeAAB4Vvfu0i+/eLsKAACaDYI8AADwLM6TBwDArQjyAADAs0aNkr7/3ttVAADQbBDkAQCAZ3XtytB6AADciCAPAAA8y2IxJ70rLPR2JQAANAsEeQAA4HlDh0obNni7CgAAmgWCPAAA8DwmvAMAwG0I8gAAwPOGD5fWrvV2FQAANAsEeQAA4HmRkVJ+vrerAACgWSDIAwCAptGxo5SW5u0qAADwewR5AADQNDhPHgAAtyDIAwCApkGQBwDALQjyAACgafTqJe3Y4e0qAADwewR5AADQNKxWKSBAKi31diUAAPg1gjwAAGg6gwZJmzZ5uwoAAPwaQR4AADQdzpMHAKDRCPIAAKDpJCcT5AEAaCSCPAAAaDqtWknHjnm7CgAA/BpBHgAANK3WraXDh71dBQAAfosgDwAAmtbIkdKaNd6uAgAAv0WQBwAATYsJ7wAAaBSCPAAAaFr9+0s//+ztKgAA8FsEeQAA0LQCAiTDkOx2b1cCAIBfIsgDAICmR688AAANRpAHAABNj/PkAQBoMII8AABoesnJBHkAABqIIA8AAJpe27asJQ8AQAMR5AEAgHfExEjHjnm7CgAA/A5BHgAAeEdysrR2rberAADA7xDkAQCAd4waJX3/vberAADA7xDkAQCAdwwaJP30k7erAADA7xDkAQCAdwQFSWVlksPh7UoAAPArBHkAAOA9vXpJu3Z5uwoAAPwKQR4AAHjPyJGsJw8AQD0R5AEAgPcQ5AEAqDeCPAAA8J6OHaW0NG9XAQCAXyHIAwAA77FYpPBwKS/P25UAAOA3CPIAAMC7hg+XfvzR21UAAOA3CPIAAMC7OE8eAIB68ekgX1hYqN/97ndKTk7W0KFD9cADD6igoKDW7Tdt2qTLLrtMgwcP1jnnnKN//OMfzscMw9Brr72mc845R0OGDNHkyZO1dOnSpngZAADgVIYOpUceAIB68Okg/8c//lEZGRlatmyZli9froyMDD333HM1bpuTk6Nbb71VF198sdatW6ennnpKTz/9tDZv3ixJ+uCDD7RgwQK9/fbbWr9+vX7729/qgQcecD4OAAC8JCxMKiqSDMPblQAA4Bd8NsgXFRVp0aJFmjlzpmJiYhQXF6f77rtPCxYsUFFRUbXtly9frpiYGE2fPl0BAQEaNWqUJk+erE8++USSlJubqzvuuEPdu3eXxWLROeeco+7du2vDhg1N/dIAAMDJunaVUlO9XQUAAH4hwJs7Ly4u1uHDh2t8rKioSGVlZerZs6fzvu7du6u4uFipqanq06dPle1TUlKqbCtJSUlJmj9/viRp5syZVR7bs2ePUlJS1K9fP3e8FAAA0BijRpnnyXft6u1KAADweV4N8ps2bdJ1111X42OzZs2SJIWFhTnvCw0NlaQaz5MvKChwPl4hJCREhYWF1bbdu3evbrnlFl100UUaPnx4g+sHAABuMnKkNHu2dNVV3q4EAACf59Ugn5ycrJ07d9b42LZt2/Tyyy+rqKhI4eHhkuQcUh8REVFt+9DQUOWdtAZtcXGx87kVVq5cqYceekhTp07Vgw8+6I6XAQAAGqt7d2n3bm9XAQCAX/DZc+S7du2qwMBA7T7hP/U9e/YoMDBQXbp0qbZ9z549lZKSUuW+3bt3q0ePHs7br732mu699149+uijeuihh2SxWDxWPwAAqAeLRQoONie9AwAAp+SzQT40NFQTJ07Uc889p+zsbGVnZ+u5557TpEmTFBISUm37c889V5mZmXr//fdVVlamH374QYsWLdKll14qSZozZ47mzJmjTz75RJMnT27qlwMAAOoydKi0caO3qwAAwOf5bJCXpMcff1xdunTR5MmTNWHCBHXo0EGPPfaY8/ELL7xQb7zxhiQpNjZW7733npYuXark5GT9/ve/1+9//3uNHDnSuYZ8UVGRpk+frsGDBzsvFc8HAABeNnKkOeEdAAA4JYthsGhrTcaNGydJWrFihZcrAQCghcjNlW69Vfr0U29XAgCAV7iaQ326Rx4AALQgUVHSSRPXAgCA6gjyAADAd7RvLx086O0qAADwaQR5AADgOzhPHgCAOhHkAQCA7yDIAwBQJ4I8AADwHX36SNu3e7sKAAB8GkEeAAD4DqtVstmksjJvVwIAgM8iyAMAAN9y2mnS5s3ergIAAJ9FkAcAAL6F8+QBADglgjwAAPAtyckEeQAAToEgDwAAfEtcnJSV5e0qAADwWQR5AADge+LjpaNHvV0FAAA+iSAPAAB8z8iR0po13q4CAACfRJAHAAC+hwnvAACoFUEeAAD4noEDWYIOAIBaEOQBAIDvCQiQDEOy271dCQAAPocgDwAAfFPfvtK2bd6uAgAAn0OQBwAAvonz5AEAqBFBHgAA+KbkZII8AAA1IMgDAADf1L69lJHh7SoAAPA5BHkAAOC7oqOl48e9XQUAAD6FIA8AAHxXcrK0bp23qwAAwKcQ5AEAgO9iwjsAAKohyAMAAN81eLC0YYO3qwAAwKcQ5AEAgO8KDpZKSiTD8HYlAAD4DII8AADwbT17Sikp3q4CAACfQZAHAAC+beRI6d13pb59pa++8nY1AAB4HUEeAAD4tpEjpTlzpO3bpYcfZpg9AKDFI8gDAADftmOHdPSo+fO6ddLy5e5p96uv6OUHAPglgjwAAPBdhiE99phksZi3rVb39MobhtkOvfwAAD8U4O0CAAAAarV8udkLX8HhMJejGzVKat268v7oaCk+XkpIMC8VP1dcx8aaBwFqareil//885vmNQEA0EgEeQAA4JsMQ3r0Uclmk+z2yvttNjPQ/+tfZk+9YUg5OVJmpjkEv+I6JaXy9rFj5nMq2v3uu8rnWq3Sgw9K555bNewDAOCjCPIAAMA3ndwbX8Fur9qLbrFIMTHmJSmp7naXLZMWL6687XBImzaZvfwJCVLXrtKAAealf38pMtL1mr/6Spo5U5o9Wxo/3vXnAaiKzxJwShx2BgAAvqeiN762HnKr1Xy8vue2n9jLfyKbzXzsX/+S7rlHattWWrFCuuUWadIk6dJLzefNm2eeV19eXnPbnHePlsjdE0fyWQLqRI88AADwPaWl0v79lcPhT+ZwSGlp5nbBwa63W1cv/1dfmb38XbtKF11U+XhxsRkqNm8217RPSTHDfHy82XM/cKCUlcV592h5Tg7d48ZVTk7ZUMxhAdSJIA8AAHxPcLD5Bb5i2bmatG5dvxB/Yi9/TQcIKnr5zzuvehAJCZEGDzYvJ8rMlLZsMYfmP/WUa20B3uTuIeuNDd0Oh5SfL+Xmmpfjx836Kj6nNhufJaAGBHkAAOCbOnY0L+7iiV7++Hjp7LPN52RmVm1r3Trpd7+T/vhHKTCw8fUDjeXu3vPSUumhhypDt9Uq3XGH+Xefl2cG85ycypBeVFS9DYtFioiQoqLM1ScOH5Z27ap8vGK0zGOPSY88Yh5UA0CQBwAALYQnevmlU8+u/+mn5j7Hj5duvVWKi2tY7YA71NR7fvbZ5qoOdV2OH6/69y1J2dnSTz9V3nY4pD17zANmZ55ZGc6josxLSMipDxwYhpScXPNn6cMPpR9/lBITpauvNts/ea4LoAUhyAMAgJbD3b380qnPu9+3T/rb38zbN90ktWljDhvu18+9NQB1MQxzmcWKZRcl6YorzCDfqpUUG2teKn7u0aPyvthYc1WIgICq7dUWur/8UvrDH+rf23+qz9L+/dJbb5l1/f3v0tNPS6edJk2fLg0axLB7tDgWw2AayJqMGzdOkrRixQovVwIAAHxWRZhZv7728+6HDpXWrDGDxrZt5rnJhw6ZPfQTJrB2PTxv507p7rulpUurP7Z0acMmklu2zPz7rU19263vZ8kwpI0bpU8+MSehPOsss6e+a9dT74dl7eDjXM2h/M8BAADQUPU5714yl+h64w1z5vvNm80JvF5/3Zzsqym5e7kwT7WJxvn+e7PX/S9/Mf8Oa1p2sTHLOLpzecj6fpYsFmnIEOn5582DBqNGmRNOXnih+Zmq6RQalrVDM0KPfC3okQcAAC5JS6v7vPsOHWp+rKxM+uc/pQ8+kPr3l+68U+rcueo27u5BrOj5XLdOGj68sofT19pEwzgc0pIl5gGjvn2lWbOkrVvd23teUmL+nR4+XPs2bdtKqan1m3OiMZ+lCsXF5uufN89cIvLSS6UpU6Tw8OqjCBo6GgHwIFdzKEG+FgR5AADQpH74QXr1VfN84DvvlE4/3bzf3QHZE2GGgOR9JSXmueOffCKde670m9+Y57XXd8i6q9wRuj3t+HHzQNm//mVOurdmjfTLL+ZnzGYze/Q56AQfQ5BvJII8AADwirQ0c2jwxo3mZF5//WvlY7UF5NLSyuW+cnOr/nzi7ZwcM+hlZVUOK46OlsaObXiYMQxp9Wqzbclsp3t38+BDTEzD2oTrcnLMSeCWLjXPEb/mmqq94J7qPfc3H38sXXtt9fs56AQfQ5BvJII8AADwqoICc3b7ffvM2xaLGbpHjzZ/PnH28aAgc3mvyMjKpb5O/Lni9qZN0o03Vt9XY8JMbZOejR1rrg8+ZIh5SsCoUc07KHrCqU6rSE+XXn5Z2rLF7H2fPLn2c9b9offckypGJWzYUH0JvfbtpZUrpV69vFMbcBKCfCMR5AEAgFfVFpAbGrprCzONGWJcV5v/+585smDFCvNnq9U8EDF+vDnawJUZ+1vqLOO1zTuwfbs5wVtOjjkT/ejR3q7U99U1w/4FF5inHUyYIF15pblMJOAlBPlGIsgDAACv8UTodvdyYQ1ps6hI+u47M9j/9JM59P7ss82A3q1b9ee35En0Tn5vn3/enIU+Olq6916pTx/v1eZPXJ0jYPVq8z3/9FPz73TqVOmSS8xRJd7QUg9ggSDfWAR5AADgNd5eo7up2szOllatMkPLL79InTpJ48ZJ55wjJSR4bhI9Xw9JNR3IadtW+vFHKTHRu7X5m4bMEZCTIy1YIH3+uXlaylVXmRMIBgbW/Hx/WFkCfoMg30gEeQAA4BWeCN2emPDME23u22f21q9caZ7TvWmTee1wmKMRBg0yw01jQo2nQlJjw1x5uTlsfsMGaeFCc6b1kzExW8M0Zo6AgwfNXvrly6UePczJBJOTK/9mPPH3xCoQLRpBvpEI8gAAwCt8eY3upmizwtKl0sSJ1e9PTjZ76yUzMLVqJcXH13yJizMft9kqn++JkFTfMFdaaq7tvn69Gdz37TNr7NPHPHXiqaekbdvcd1oF3GPbNnPVhzVrzOUhp083P4cN+Xuy2ytXkzj5+v77zb8Jw+D33gIR5BuJIA8AALyGWcZdmyPAbjfXCs/MrP1y7FhlG4ZhnqOfk2P+bLFIXbqYs78nJJiX+HhzOHV9QtOpDg4UFZkzy1eE9oMHzVUG+vc3R1YMGWKeUlCxP0/MZQD3cjjMyRs/+sjsrc/Lq/x7atfOXAYwP98M5fn5VUfWVPyebTZzJYmK1SUqrlNTzfkQTnbjjdKdd7o+SST8lqs5NKApigEAAEA9dOxoXlqq5cvN3u2T2e3m/cuXm2HWZjN73ePiXFs+bNkyacmSytuGIe3dK/3nP+bBkYrwn5tbubSfJIWFVYb8+PjKnxMSzH0/8ohZi91uhqxbb5XOOss8GBMaKg0caAb2iy4ylzur7SCBYUiPPmq2UdtpFY8+Kp13Hr2z3mS1SmPGmEtEvvVW5f2GYS4L2LOnOZokKsqcLM/V4F1xAKvib6mCzWYegEpIkB5+2Bxlcu655oU5E1osgjwAAAB8h6fCbEW7NYWkH3449dDlwkIz4B89Wnm9ZYv584YNZm97BYdD2r/fDHJXXul6fZI55H7//ppfd0XbaWnmdvU5rQLud6q/p7fflm6+uf4HW051AGvnTnOFh2eeMf/+Vqww95+eLvXta4b6M86QwsNrb9/XJ3lEvTC0vhYMrQcAAPACT80R4Ikh655YJrCln1bhL3xlZQnDMCdJXL5c+uYbc9LE0aPNA10nDsP3p5nwW/gBB86RbySCPAAAgJe4O8x6YiUAifPZWypfXlmipMQ8f3/5cumnnyqH4QcGmjPuV/DVv01/OuDgIZwjDwAAAP/k7jkCPDFknfPZWy5P/D0FB5vhta4DWHW1FxxsDsE/+2zz9tGjZg/3XXdVbmO1Sr/7nW/+bZ54esGJ82GgGoI8AAAAmjd3haQTcT57y+WJvyfJM5NcJiSYvfJZWZX3ORzSxo1mj/fYsWboHztWio11777r6+R5B2w2DoadAkEeAAAAzZ+7Q5Knwhz8g7+sLHGqSfksFumWW6RVq6TbbzeXZezbtzLYR0fX3X5jz2e3282VI37+Wfr886qT/Z28SgWqIMgDAAAADeEvYQ4t16lmwv/xR3PUyIwZ5sUwpG3bpK+/lj76yFyGccAAcynFsWPNte5PZBjmcnjbt5vX48bV3nNesZrD1q3m5eefpexsc5h/t25Sv37S2rXVDzhYLNIVV0h/+Yt5HRPjrnfG7xHkAQAAAKC5qe88DhaLGaj79ZPuvNN8zs8/mz32c+ZI+fnmTPhnn23OjP/dd9XPZz/vPHNJvIqwvnWrdOiQua9OnaT+/aWRI6WbbpLi4iprWbbMPCBQ02vIyTEn+bvxRik0VJo+3dxPQMuOsi371QMAAABAc9TYeRysVmngQPMyc6a5/ebNZo/9W2+Za9lbLGbYrug5Hz1aSkw0A/tpp5mhu3XrU5/j7soBhxUrzBnsMzKkv/9deukls67rrjOvWyCCPAAAAAA0N+6ex8FqlQYNMi99+0oLFlQ+VtFzPnNm/c9nr88Bh/btpfvuk+6915yw7913pR07pIkTpauvNl9PTZrh2vSsI18L1pEHAAAAgJNUrPW+YUP1CfSGDGnY2u9paXUfcOjQoebHysqkL780e+rLy6Urr5QmT648QOFna9OzjjwAAAAAwL1ONYFeQ2eZb8zEkYGB0kUXmZesLOmzz6SLL5a6dpWuv146dqxZrk1v9XYBAAAAAAA/cOL57DWpmEDPW4O+4+LMGfi//NIcSv/559Lll1f2wFesTd8MBqUT5AEAAAAAdavP+eze1ru3uXReXl5lcD9x1ICfY2g9AAAAAKBu7p5Az5MqRg+cvDZ9Ra98xbJ7foogDwAAAABwTWPOZ29KnjiX34cwtB4AAAAA0Hz4+rn8bkCQBwAAAAA0H/50Ln8DMbQeAAAAANB8+NO5/A1EkAcAAAAANC/+ci5/AzG0HgAAAAAAP0KQBwAAAADAjxDkAQAAAADwIwR5AAAAAAD8CEEeAAAAAAA/QpAHAAAAAMCPEOQBAAAAAPAjBHkAAAAAAPwIQR4AAAAAAD9CkAcAAAAAwI8Q5AEAAAAA8CMEeQAAAAAA/AhBHgAAAAAAPxLg7QJ81ZEjR2S32zVu3DhvlwIAAAAAaAEyMjJks9nq3I4e+VoEBwcrIIDjHAAAAACAphEQEKDg4OA6t7MYhmE0QT0AAAAAAMAN6JEHAAAAAMCPEOQBAAAAAPAjBHkAAAAAAPwIQd5PHThwQHfeeadGjhyp5ORkzZgxQ2lpac7H9+7dq+uvv16DBw/WmDFj9MYbb3ixWhQVFemKK67QggULqtz/1ltvqV+/fho8eLDz8uKLL3qpypattt8RnyXftGnTJvXu3bvKZ2f69OneLqvFy8rK0owZMzRs2DAlJyfrqaeeUnl5ubfLwkm++OIL9e3bt8rn5/777/d2WfhVdna2zj33XK1Zs8Z536ZNm3TZZZdp8ODBOuecc/SPf/zDixVCqvn39Pjjj6t///5VPlufffaZF6tsmXbs2KEbbrhBI0aM0OjRo/XAAw8oOztbUvP6LBHk/dQdd9yh6OhorVy5UitXrlRMTIxmzJghSSorK9Ntt92mAQMGaM2aNXrrrbf0ySef6Msvv/Ry1S1TSkqKpk+frp9++qnaYz///LNuv/12bdy40Xn57W9/2/RFtnC1/Y74LPmuLVu2aPjw4VU+O5988om3y2rx7r77boWFhWn16tWaP3++vv/+e73//vveLgsn2bJli6ZMmVLl8/Pss896uyxIWr9+va644grt37/feV9OTo5uvfVWXXzxxVq3bp2eeuopPf3009q8ebMXK23Zavo9SeZn649//GOVz9YVV1zhpSpbpuLiYt18880aPHiwvv32Wy1evFjHjx/Xww8/3Ow+SwR5P5STk6P4+HjNmjVLYWFhCg8P13XXXaddu3YpJydH69at05EjRzRz5kwFBQWpb9++uvbaa/mS6wXff/+9rr/+el1yySVq3759tce3bNmi/v37e6EyVDjV74jPku/is+N79u3bp7Vr1+r+++9XaGioOnbsqBkzZvB58UF8fnzTwoULdd9991U7oL98+XLFxMRo+vTpCggI0KhRozR58mQ+W15S2++ptLRUu3bt4rPlZenp6erdu7fuuOMOBQUFKTY2VldccYXWrVvX7D5LLJTuo4qLi3X48OEaH0tISNC7775b5b5ly5YpMTFR0dHRSklJUdeuXRUUFOR8PCkpSW+99ZZHa26J6vo99e7dW19//bWCg4M1Z86cKo9nZWUpPT1d8+bN0+9//3sFBQVpwoQJmjVrlktrR8I1jfkd8Vnynrp+b1u2bFF8fLzOO+885efna8SIEXrooYfUtm3bJq4UFVJSUhQTE6M2bdo47+vevbvS09OVm5urqKgoL1aHCg6HQ1u3blVoaKjeeecd2e12nXnmmbrvvvsUHR3t7fJatDFjxmjy5MkKCAioEhJTUlLUs2fPKtsmJSVp/vz5TV0iVPvvaceOHSovL9fs2bO1fv16RUZG6tJLL9XNN98sq5W+06bSrVs3vfPOO1XuW7Zsmfr169fsPksEeR+1adMmXXfddTU+9tprr2n8+PHO23PnztV7772nv/3tb5KkgoIChYaGVnlOaGioCgsLPVdwC1Wf39PJjh49qmHDhmnq1Kl66aWXlJaWprvvvltFRUV6/PHHPVVyi9OY3xGfJe851e9t9uzZat26tU4//XRdddVVKisr0x//+EfdeuutWrhwoWw2WxNXC6n2z4skFRYWEuR9RHZ2tvr27avzzz9fs2fP1rFjx/Tggw/q/vvv5yCllyUkJNR4f02frZCQEP4v8pLafk95eXkaMWKErr32Wr3wwgvavn277rjjDlmtVt18881NXCUkyTAMvfTSS/r666/18ccf68MPP2xWnyWCvI9KTk7Wzp07T7lNaWmpnn76aX3xxRd68803NXLkSElSWFiYioqKqmxbVFSk8PBwj9XbUrnye6pN7969qwzl6d69u2bMmKE//OEPBHk3aszviM+S99T1ezv//POr3H700Uc1atQo7dmzp9rRdjSN2j4vkvjM+JD4+Pgq//eEhobq/vvv1+WXX678/HxFRER4sTrUJDQ0VHl5eVXuKy4u5nPlY0aPHq3Ro0c7bw8cOFDXX3+9vvjiC4K8F+Tn5+t3v/udtm7dqo8//li9evVqdp8lxnn4qezsbF177bX66aefNH/+fGeIl6QePXooNTW1ykzBu3fvVo8ePbxRKmqxdu1avfnmm1XuKy0tVUhIiJcqwsn4LPmmjIwMPf300yooKHDeV1paKkl8fryoR48eOn78uDIzM5337dmzR23btlVkZKQXK8OJduzYoeeee06GYTjvKy0tldVqrXIaEXxHz549lZKSUuU+/i/yPV999ZU+/fTTKvfxvc479u/fr0svvVT5+fmaP3++evXqJan5fZYI8n6orKxMN998syIiIjR37lx17NixyuPJycmKjY3V888/r5KSEu3YsUMfffSRpk2b5qWKUZPQ0FC98sorWrRokRwOh1JSUvT6668zu6kP4bPkm2JjY7VkyRK9+OKLKikpUXZ2tp544gmNGjVKnTp18nZ5LVaXLl00dOhQ/fnPf1Z+fr7S0tL0+uuv83nxMTExMfrkk0/0zjvvqLy8XOnp6Xr22Wd1ySWXEOR91LnnnqvMzEy9//77Kisr0w8//KBFixbp0ksv9XZpOIFhGHr66af1/fffyzAMbdy4UR9++CHf65pYTk6Orr/+eg0ZMkTvvvuuWrVq5XysuX2WLMaJh2ThF5YvX6677rpLwcHB1c4FXbJkidq3b699+/bpySef1KZNmxQWFqZrrrlGt956q5cqhiSdc845uvPOOzV16lTnfcuXL9drr72m/fv3KzIyUpdffrlmzJjBpCheUtPviM+Sb9qxY4f+8pe/6Oeff5YknXXWWXrkkUcUExPj3cJauMzMTD355JNas2aNrFarLr74Yt13333MW+Bj1q5dqxdeeEG7du1ScHCwLrzwQt1///1MtOpDevXqpQ8//FDJycmSzJUGnnrqKe3atUutWrXSjBkzqvxfBe84+ff06aefas6cOTp8+LDi4+N1ww03aPr06V6usmWZM2eOnnnmGYWGhspisVR5bOPGjc3qs0SQBwAAAADAj9DtBwAAAACAHyHIAwAAAADgRwjyAAAAAAD4EYI8AAAAAAB+hCAPAAAAAIAfIcgDAAAAAOBHCPIAAAAAAPgRgjwAAHAbwzC8XQIAAM1egLcLAAAA9fPQQw9p4cKFtT4eExOjNWvWNGFFphUrVmjZsmX661//WuPjddUtSYmJiXr66ad13XXX6cMPP1RycrInSgUAwK8R5AEA8EMJCQl69dVXa3wsIMA7/72///77p3x8xowZuvLKK523X3/9dW3btq3K6wgKClKnTp302WefKSkpyVOlAgDg1wjyAAD4oaCgIA0aNMjbZdRLp06d1KlTJ+ftVq1a1fo6/O21AQDQlDhHHgCAZuqNN95Qv379lJ2dXeX+v//97+rbt6+OHj0qSUpPT9c999yjESNG6LTTTtP111+vbdu2Obc/cOCAevXqpS+//FIzZ87U4MGDNXz4cD3yyCMqKCiQJF177bVau3at1q5dq169ejVqaP+aNWuqtPHKK69owoQJ+uqrrzRp0iQNGDBAU6ZM0caNG/XTTz/psssu08CBAzVp0iR9//33VdratWuXfvOb32jIkCEaMmSI7rjjDqWlpTW4NgAAfAFBHgAAP1VeXl7jpWLCuYsuukh2u13Lly+v8rzFixdr1KhRSkhIUHZ2tq688kpt3bpVjz76qJ5//nk5HA5Nnz5de/bsqfK8xx9/XImJiXr99dd1880365///KfeeOMN52N9+/ZV37599dlnn6lfv35ufa2HDh3S008/rdtuu00vvfSScnJyNHPmTN1zzz26/PLL9cILL8jhcOi3v/2tiouLJUl79+7VlVdeqaysLD3zzDN66qmnlJaWpquuukpZWVlurQ8AgKbE0HoAAPzQwYMHaw3Ls2bN0owZM9S+fXsNHz5cS5YscZ6bnp6erg0bNjgnpPvggw90/PhxzZ07V4mJiZKkM844QxdccIFefvllzZ4929numWeeqQcffFCSNGrUKH333XdatWqV7r33XiUlJSkiIkKSZ4bFFxUV6fHHH9cZZ/x/e/cdFsXV/g38y1KtURRFsUUUJKCyLFUQBARsKAIigkRig0ejCBaIBexiYkdjwxKFWEGDojFR7Ci2qIHYow8IUiXIIrDL7nn/4GV+LHVRLDy5P9flJbszc+bMmXvOzJlzZtYaAPDs2TOsXbsWK1asgLu7OwBAIpFg5syZeP78OfT09LB582aoqalh7969XN4sLCwwePBgREZGcttCCCGENDXUkCeEEEKaIA0NDWzdurXGaR07duT+HjVqFBYtWoTs7Gx06NAB8fHxaNasGRwcHAAA165dg56eHjp27IiysjIAAI/Hg7W1NeLi4mTSrdpA19TURHp6eiNuVd2MjIy4v9u3b18tT23atAEAvHnzBgBw/fp1mJmZQU1Njdu2li1bwtjYGImJiR8n04QQQsgHQA15QgghpAlSUVFB3759651vyJAhWLZsGU6fPo0JEybg5MmTcHR0RLNmzQAA//zzD/773//W2rtfXFzM/V2xTAUej/dRfze+ole9MjU1tVrn/+eff3Dq1CmcOnWq2jR1dfVGzRshhBDyMVFDnhBCCPkf1rJlS9jb2+P06dOwsrLCw4cPZYaUt2rVCqamppg3b16Ny6uoqHysrDa6Vq1aYcCAAfjmm2+qTftUP9FHCCGENAY6ixFCCCH/40aNGgV/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",
      "text/plain": [
       "<Figure size 1200x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#MM Graph\n",
    "MM_table[[('Good News', 'CAR MM'), ('No News', 'CAR MM'), ('Bad News', 'CAR MM')]].plot(style = ['go-', 'ys-', 'r^-'], figsize = (12,6))\n",
    "plt.title('Market Model', fontsize = 15, fontweight = 'bold')\n",
    "plt.xlabel('Event Time', fontsize = 12)\n",
    "plt.ylabel('CAR', fontsize = 12)\n",
    "plt.rcParams['lines.linewidth'] = .5\n",
    "plt.legend(['Good News Firms', 'No News Firms', 'Bad News Firms'], loc = 'lower center', ncol = 5, bbox_to_anchor = (0.5, -0.18), shadow = True)\n",
    "plt.annotate('Figure 2a. Plot of cumulative abnormal return for earning announcements from event day -20 to event day 20', xy = (.08,-.2), xycoords='axes fraction', va = 'center')\n",
    "plt.annotate('The abnormal return is calculated using the market model as the normal return measure.', xy = (.15,-.235), xycoords='axes fraction', va = 'center')\n",
    "plt.style.use('seaborn-white')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Part 6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Seperating CMRM data into good news, no news, bad news, for the event day\n",
    "cmr_ar = cmr_data[cmr_data['event window'] == 0]\n",
    "\n",
    "#Good News\n",
    "cmr_ar_good = cmr_ar[cmr_ar['news categories'] == 'GN']\n",
    "cmr_ar_good = cmr_ar_good['AR CMRM']\n",
    "\n",
    "#No News\n",
    "cmr_ar_no = cmr_ar[cmr_ar['news categories'] == 'NN']\n",
    "cmr_ar_no = cmr_ar_no['AR CMRM']\n",
    "\n",
    "#Bad News\n",
    "cmr_ar_bad = cmr_ar[cmr_ar['news categories'] == 'BN']\n",
    "cmr_ar_bad = cmr_ar_bad['AR CMRM']\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Seperating CMRM data into good news, no news, bad news, for the event day\n",
    "mm_ar = mm_data[mm_data['event window'] == 0]\n",
    "\n",
    "#Good News\n",
    "mm_ar_good = mm_ar[mm_ar['news categories'] == 'GN']\n",
    "mm_ar_good = mm_ar_good['AR MM']\n",
    "\n",
    "#No News\n",
    "mm_ar_no = mm_ar[mm_ar['news categories'] == 'NN']\n",
    "mm_ar_no = mm_ar_no['AR MM']\n",
    "\n",
    "#Bad News\n",
    "mm_ar_bad = mm_ar[mm_ar['news categories'] == 'BN']\n",
    "mm_ar_bad = mm_ar_bad['AR MM']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Good-News</th>\n",
       "      <th>NO-News</th>\n",
       "      <th>Bad-News</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>cmrm</th>\n",
       "      <td>0.032326</td>\n",
       "      <td>0.027303</td>\n",
       "      <td>0.03513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mm</th>\n",
       "      <td>0.031162</td>\n",
       "      <td>0.026510</td>\n",
       "      <td>0.03370</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Good-News   NO-News  Bad-News\n",
       "cmrm   0.032326  0.027303   0.03513\n",
       "mm     0.031162  0.026510   0.03370"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Printing the final table\n",
    "\n",
    "a= cmr_ar_good.std()\n",
    "b = cmr_ar_no.std()\n",
    "c = cmr_ar_bad.std()\n",
    "d = mm_ar_good.std()\n",
    "e = mm_ar_no.std()\n",
    "f = mm_ar_bad.std()\n",
    "\n",
    "table = {'Good-News': [a,d],\n",
    "          'NO-News':[b,e],\n",
    "          'Bad-News':[c,f]}\n",
    "dataframe=pd.DataFrame(table,index=['cmrm', 'mm'])\n",
    "dataframe"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Hypothesis Testing"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### CMRM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(211.0, 0.0037745452609669883)"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Good News\n",
    "m, p = wilcoxon(CMRM_table['Good News']['AR CMRM'])\n",
    "m, p"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(402.0, 0.7195597712516246)"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#No News\n",
    "m, p = wilcoxon(CMRM_table['No News']['AR CMRM'])\n",
    "m, p"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(384.0, 0.5549689353110807)"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Bad News\n",
    "m, p = wilcoxon(CMRM_table['Bad News']['AR CMRM'])\n",
    "m, p"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### MM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(300.0, 0.09227144024953304)"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Good News\n",
    "m, p = wilcoxon(MM_table['Good News']['AR MM'])\n",
    "m, p"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(397.0, 0.6721206030078974)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#No News\n",
    "m, p = wilcoxon(MM_table['No News']['AR MM'])\n",
    "m, p"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(262.0, 0.028404024519659288)"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "m, p = wilcoxon(MM_table['Bad News']['AR MM'])\n",
    "m, p"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Tables"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "styles = [dict(selector=\"caption\", props=[(\"font-size\", \"200%\")])]\n",
    "MM_table = MM_table.style.set_caption('Market Model').set_table_styles(styles)\n",
    "CMRM_table = CMRM_table.style.set_caption('Constant Mean Return Model').set_table_styles(styles)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_e56ec caption {\n",
       "  font-size: 200%;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_e56ec\">\n",
       "  <caption>Constant Mean Return Model</caption>\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_e56ec_level0_col0\" class=\"col_heading level0 col0\" colspan=\"2\">Good News</th>\n",
       "      <th id=\"T_e56ec_level0_col2\" class=\"col_heading level0 col2\" colspan=\"2\">No News</th>\n",
       "      <th id=\"T_e56ec_level0_col4\" class=\"col_heading level0 col4\" colspan=\"2\">Bad News</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th class=\"blank level1\" >&nbsp;</th>\n",
       "      <th id=\"T_e56ec_level1_col0\" class=\"col_heading level1 col0\" >AR CMRM</th>\n",
       "      <th id=\"T_e56ec_level1_col1\" class=\"col_heading level1 col1\" >CAR CMRM</th>\n",
       "      <th id=\"T_e56ec_level1_col2\" class=\"col_heading level1 col2\" >AR CMRM</th>\n",
       "      <th id=\"T_e56ec_level1_col3\" class=\"col_heading level1 col3\" >CAR CMRM</th>\n",
       "      <th id=\"T_e56ec_level1_col4\" class=\"col_heading level1 col4\" >AR CMRM</th>\n",
       "      <th id=\"T_e56ec_level1_col5\" class=\"col_heading level1 col5\" >CAR CMRM</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th class=\"index_name level0\" >event window</th>\n",
       "      <th class=\"blank col0\" >&nbsp;</th>\n",
       "      <th class=\"blank col1\" >&nbsp;</th>\n",
       "      <th class=\"blank col2\" >&nbsp;</th>\n",
       "      <th class=\"blank col3\" >&nbsp;</th>\n",
       "      <th class=\"blank col4\" >&nbsp;</th>\n",
       "      <th class=\"blank col5\" >&nbsp;</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row0\" class=\"row_heading level0 row0\" >-20</th>\n",
       "      <td id=\"T_e56ec_row0_col0\" class=\"data row0 col0\" >0.000052</td>\n",
       "      <td id=\"T_e56ec_row0_col1\" class=\"data row0 col1\" >0.000052</td>\n",
       "      <td id=\"T_e56ec_row0_col2\" class=\"data row0 col2\" >-0.000025</td>\n",
       "      <td id=\"T_e56ec_row0_col3\" class=\"data row0 col3\" >-0.000025</td>\n",
       "      <td id=\"T_e56ec_row0_col4\" class=\"data row0 col4\" >-0.000276</td>\n",
       "      <td id=\"T_e56ec_row0_col5\" class=\"data row0 col5\" >-0.000276</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row1\" class=\"row_heading level0 row1\" >-19</th>\n",
       "      <td id=\"T_e56ec_row1_col0\" class=\"data row1 col0\" >-0.000099</td>\n",
       "      <td id=\"T_e56ec_row1_col1\" class=\"data row1 col1\" >-0.000046</td>\n",
       "      <td id=\"T_e56ec_row1_col2\" class=\"data row1 col2\" >-0.000228</td>\n",
       "      <td id=\"T_e56ec_row1_col3\" class=\"data row1 col3\" >-0.000254</td>\n",
       "      <td id=\"T_e56ec_row1_col4\" class=\"data row1 col4\" >0.000723</td>\n",
       "      <td id=\"T_e56ec_row1_col5\" class=\"data row1 col5\" >0.000447</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row2\" class=\"row_heading level0 row2\" >-18</th>\n",
       "      <td id=\"T_e56ec_row2_col0\" class=\"data row2 col0\" >-0.000420</td>\n",
       "      <td id=\"T_e56ec_row2_col1\" class=\"data row2 col1\" >-0.000466</td>\n",
       "      <td id=\"T_e56ec_row2_col2\" class=\"data row2 col2\" >-0.001190</td>\n",
       "      <td id=\"T_e56ec_row2_col3\" class=\"data row2 col3\" >-0.001443</td>\n",
       "      <td id=\"T_e56ec_row2_col4\" class=\"data row2 col4\" >-0.000999</td>\n",
       "      <td id=\"T_e56ec_row2_col5\" class=\"data row2 col5\" >-0.000552</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row3\" class=\"row_heading level0 row3\" >-17</th>\n",
       "      <td id=\"T_e56ec_row3_col0\" class=\"data row3 col0\" >-0.000924</td>\n",
       "      <td id=\"T_e56ec_row3_col1\" class=\"data row3 col1\" >-0.001390</td>\n",
       "      <td id=\"T_e56ec_row3_col2\" class=\"data row3 col2\" >-0.000646</td>\n",
       "      <td id=\"T_e56ec_row3_col3\" class=\"data row3 col3\" >-0.002090</td>\n",
       "      <td id=\"T_e56ec_row3_col4\" class=\"data row3 col4\" >0.000070</td>\n",
       "      <td id=\"T_e56ec_row3_col5\" class=\"data row3 col5\" >-0.000482</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row4\" class=\"row_heading level0 row4\" >-16</th>\n",
       "      <td id=\"T_e56ec_row4_col0\" class=\"data row4 col0\" >-0.000367</td>\n",
       "      <td id=\"T_e56ec_row4_col1\" class=\"data row4 col1\" >-0.001757</td>\n",
       "      <td id=\"T_e56ec_row4_col2\" class=\"data row4 col2\" >-0.001406</td>\n",
       "      <td id=\"T_e56ec_row4_col3\" class=\"data row4 col3\" >-0.003496</td>\n",
       "      <td id=\"T_e56ec_row4_col4\" class=\"data row4 col4\" >-0.001295</td>\n",
       "      <td id=\"T_e56ec_row4_col5\" class=\"data row4 col5\" >-0.001777</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row5\" class=\"row_heading level0 row5\" >-15</th>\n",
       "      <td id=\"T_e56ec_row5_col0\" class=\"data row5 col0\" >0.000083</td>\n",
       "      <td id=\"T_e56ec_row5_col1\" class=\"data row5 col1\" >-0.001674</td>\n",
       "      <td id=\"T_e56ec_row5_col2\" class=\"data row5 col2\" >-0.000617</td>\n",
       "      <td id=\"T_e56ec_row5_col3\" class=\"data row5 col3\" >-0.004113</td>\n",
       "      <td id=\"T_e56ec_row5_col4\" class=\"data row5 col4\" >0.000562</td>\n",
       "      <td id=\"T_e56ec_row5_col5\" class=\"data row5 col5\" >-0.001215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row6\" class=\"row_heading level0 row6\" >-14</th>\n",
       "      <td id=\"T_e56ec_row6_col0\" class=\"data row6 col0\" >0.000802</td>\n",
       "      <td id=\"T_e56ec_row6_col1\" class=\"data row6 col1\" >-0.000872</td>\n",
       "      <td id=\"T_e56ec_row6_col2\" class=\"data row6 col2\" >0.001638</td>\n",
       "      <td id=\"T_e56ec_row6_col3\" class=\"data row6 col3\" >-0.002475</td>\n",
       "      <td id=\"T_e56ec_row6_col4\" class=\"data row6 col4\" >0.000440</td>\n",
       "      <td id=\"T_e56ec_row6_col5\" class=\"data row6 col5\" >-0.000775</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row7\" class=\"row_heading level0 row7\" >-13</th>\n",
       "      <td id=\"T_e56ec_row7_col0\" class=\"data row7 col0\" >-0.000348</td>\n",
       "      <td id=\"T_e56ec_row7_col1\" class=\"data row7 col1\" >-0.001220</td>\n",
       "      <td id=\"T_e56ec_row7_col2\" class=\"data row7 col2\" >-0.000584</td>\n",
       "      <td id=\"T_e56ec_row7_col3\" class=\"data row7 col3\" >-0.003059</td>\n",
       "      <td id=\"T_e56ec_row7_col4\" class=\"data row7 col4\" >-0.000581</td>\n",
       "      <td id=\"T_e56ec_row7_col5\" class=\"data row7 col5\" >-0.001356</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row8\" class=\"row_heading level0 row8\" >-12</th>\n",
       "      <td id=\"T_e56ec_row8_col0\" class=\"data row8 col0\" >-0.000520</td>\n",
       "      <td id=\"T_e56ec_row8_col1\" class=\"data row8 col1\" >-0.001740</td>\n",
       "      <td id=\"T_e56ec_row8_col2\" class=\"data row8 col2\" >-0.000675</td>\n",
       "      <td id=\"T_e56ec_row8_col3\" class=\"data row8 col3\" >-0.003734</td>\n",
       "      <td id=\"T_e56ec_row8_col4\" class=\"data row8 col4\" >-0.001801</td>\n",
       "      <td id=\"T_e56ec_row8_col5\" class=\"data row8 col5\" >-0.003157</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row9\" class=\"row_heading level0 row9\" >-11</th>\n",
       "      <td id=\"T_e56ec_row9_col0\" class=\"data row9 col0\" >0.000279</td>\n",
       "      <td id=\"T_e56ec_row9_col1\" class=\"data row9 col1\" >-0.001460</td>\n",
       "      <td id=\"T_e56ec_row9_col2\" class=\"data row9 col2\" >0.000386</td>\n",
       "      <td id=\"T_e56ec_row9_col3\" class=\"data row9 col3\" >-0.003347</td>\n",
       "      <td id=\"T_e56ec_row9_col4\" class=\"data row9 col4\" >-0.000800</td>\n",
       "      <td id=\"T_e56ec_row9_col5\" class=\"data row9 col5\" >-0.003957</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row10\" class=\"row_heading level0 row10\" >-10</th>\n",
       "      <td id=\"T_e56ec_row10_col0\" class=\"data row10 col0\" >0.000687</td>\n",
       "      <td id=\"T_e56ec_row10_col1\" class=\"data row10 col1\" >-0.000773</td>\n",
       "      <td id=\"T_e56ec_row10_col2\" class=\"data row10 col2\" >0.000701</td>\n",
       "      <td id=\"T_e56ec_row10_col3\" class=\"data row10 col3\" >-0.002646</td>\n",
       "      <td id=\"T_e56ec_row10_col4\" class=\"data row10 col4\" >0.000792</td>\n",
       "      <td id=\"T_e56ec_row10_col5\" class=\"data row10 col5\" >-0.003165</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row11\" class=\"row_heading level0 row11\" >-9</th>\n",
       "      <td id=\"T_e56ec_row11_col0\" class=\"data row11 col0\" >0.001414</td>\n",
       "      <td id=\"T_e56ec_row11_col1\" class=\"data row11 col1\" >0.000641</td>\n",
       "      <td id=\"T_e56ec_row11_col2\" class=\"data row11 col2\" >0.000434</td>\n",
       "      <td id=\"T_e56ec_row11_col3\" class=\"data row11 col3\" >-0.002211</td>\n",
       "      <td id=\"T_e56ec_row11_col4\" class=\"data row11 col4\" >-0.000087</td>\n",
       "      <td id=\"T_e56ec_row11_col5\" class=\"data row11 col5\" >-0.003252</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row12\" class=\"row_heading level0 row12\" >-8</th>\n",
       "      <td id=\"T_e56ec_row12_col0\" class=\"data row12 col0\" >-0.000235</td>\n",
       "      <td id=\"T_e56ec_row12_col1\" class=\"data row12 col1\" >0.000406</td>\n",
       "      <td id=\"T_e56ec_row12_col2\" class=\"data row12 col2\" >-0.000828</td>\n",
       "      <td id=\"T_e56ec_row12_col3\" class=\"data row12 col3\" >-0.003039</td>\n",
       "      <td id=\"T_e56ec_row12_col4\" class=\"data row12 col4\" >0.000715</td>\n",
       "      <td id=\"T_e56ec_row12_col5\" class=\"data row12 col5\" >-0.002537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row13\" class=\"row_heading level0 row13\" >-7</th>\n",
       "      <td id=\"T_e56ec_row13_col0\" class=\"data row13 col0\" >0.000446</td>\n",
       "      <td id=\"T_e56ec_row13_col1\" class=\"data row13 col1\" >0.000852</td>\n",
       "      <td id=\"T_e56ec_row13_col2\" class=\"data row13 col2\" >0.000193</td>\n",
       "      <td id=\"T_e56ec_row13_col3\" class=\"data row13 col3\" >-0.002846</td>\n",
       "      <td id=\"T_e56ec_row13_col4\" class=\"data row13 col4\" >-0.000197</td>\n",
       "      <td id=\"T_e56ec_row13_col5\" class=\"data row13 col5\" >-0.002735</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row14\" class=\"row_heading level0 row14\" >-6</th>\n",
       "      <td id=\"T_e56ec_row14_col0\" class=\"data row14 col0\" >0.000215</td>\n",
       "      <td id=\"T_e56ec_row14_col1\" class=\"data row14 col1\" >0.001068</td>\n",
       "      <td id=\"T_e56ec_row14_col2\" class=\"data row14 col2\" >0.000700</td>\n",
       "      <td id=\"T_e56ec_row14_col3\" class=\"data row14 col3\" >-0.002146</td>\n",
       "      <td id=\"T_e56ec_row14_col4\" class=\"data row14 col4\" >0.000269</td>\n",
       "      <td id=\"T_e56ec_row14_col5\" class=\"data row14 col5\" >-0.002466</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row15\" class=\"row_heading level0 row15\" >-5</th>\n",
       "      <td id=\"T_e56ec_row15_col0\" class=\"data row15 col0\" >0.000763</td>\n",
       "      <td id=\"T_e56ec_row15_col1\" class=\"data row15 col1\" >0.001831</td>\n",
       "      <td id=\"T_e56ec_row15_col2\" class=\"data row15 col2\" >0.000993</td>\n",
       "      <td id=\"T_e56ec_row15_col3\" class=\"data row15 col3\" >-0.001153</td>\n",
       "      <td id=\"T_e56ec_row15_col4\" class=\"data row15 col4\" >-0.000243</td>\n",
       "      <td id=\"T_e56ec_row15_col5\" class=\"data row15 col5\" >-0.002709</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row16\" class=\"row_heading level0 row16\" >-4</th>\n",
       "      <td id=\"T_e56ec_row16_col0\" class=\"data row16 col0\" >0.000159</td>\n",
       "      <td id=\"T_e56ec_row16_col1\" class=\"data row16 col1\" >0.001990</td>\n",
       "      <td id=\"T_e56ec_row16_col2\" class=\"data row16 col2\" >-0.000427</td>\n",
       "      <td id=\"T_e56ec_row16_col3\" class=\"data row16 col3\" >-0.001580</td>\n",
       "      <td id=\"T_e56ec_row16_col4\" class=\"data row16 col4\" >-0.000028</td>\n",
       "      <td id=\"T_e56ec_row16_col5\" class=\"data row16 col5\" >-0.002738</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row17\" class=\"row_heading level0 row17\" >-3</th>\n",
       "      <td id=\"T_e56ec_row17_col0\" class=\"data row17 col0\" >0.000414</td>\n",
       "      <td id=\"T_e56ec_row17_col1\" class=\"data row17 col1\" >0.002404</td>\n",
       "      <td id=\"T_e56ec_row17_col2\" class=\"data row17 col2\" >0.000104</td>\n",
       "      <td id=\"T_e56ec_row17_col3\" class=\"data row17 col3\" >-0.001476</td>\n",
       "      <td id=\"T_e56ec_row17_col4\" class=\"data row17 col4\" >0.000736</td>\n",
       "      <td id=\"T_e56ec_row17_col5\" class=\"data row17 col5\" >-0.002001</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row18\" class=\"row_heading level0 row18\" >-2</th>\n",
       "      <td id=\"T_e56ec_row18_col0\" class=\"data row18 col0\" >0.000558</td>\n",
       "      <td id=\"T_e56ec_row18_col1\" class=\"data row18 col1\" >0.002961</td>\n",
       "      <td id=\"T_e56ec_row18_col2\" class=\"data row18 col2\" >0.000825</td>\n",
       "      <td id=\"T_e56ec_row18_col3\" class=\"data row18 col3\" >-0.000651</td>\n",
       "      <td id=\"T_e56ec_row18_col4\" class=\"data row18 col4\" >0.000962</td>\n",
       "      <td id=\"T_e56ec_row18_col5\" class=\"data row18 col5\" >-0.001040</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row19\" class=\"row_heading level0 row19\" >-1</th>\n",
       "      <td id=\"T_e56ec_row19_col0\" class=\"data row19 col0\" >-0.000259</td>\n",
       "      <td id=\"T_e56ec_row19_col1\" class=\"data row19 col1\" >0.002703</td>\n",
       "      <td id=\"T_e56ec_row19_col2\" class=\"data row19 col2\" >-0.000724</td>\n",
       "      <td id=\"T_e56ec_row19_col3\" class=\"data row19 col3\" >-0.001375</td>\n",
       "      <td id=\"T_e56ec_row19_col4\" class=\"data row19 col4\" >-0.000537</td>\n",
       "      <td id=\"T_e56ec_row19_col5\" class=\"data row19 col5\" >-0.001577</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row20\" class=\"row_heading level0 row20\" >0</th>\n",
       "      <td id=\"T_e56ec_row20_col0\" class=\"data row20 col0\" >0.007799</td>\n",
       "      <td id=\"T_e56ec_row20_col1\" class=\"data row20 col1\" >0.010502</td>\n",
       "      <td id=\"T_e56ec_row20_col2\" class=\"data row20 col2\" >-0.003211</td>\n",
       "      <td id=\"T_e56ec_row20_col3\" class=\"data row20 col3\" >-0.004586</td>\n",
       "      <td id=\"T_e56ec_row20_col4\" class=\"data row20 col4\" >-0.010368</td>\n",
       "      <td id=\"T_e56ec_row20_col5\" class=\"data row20 col5\" >-0.011945</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row21\" class=\"row_heading level0 row21\" >1</th>\n",
       "      <td id=\"T_e56ec_row21_col0\" class=\"data row21 col0\" >0.005081</td>\n",
       "      <td id=\"T_e56ec_row21_col1\" class=\"data row21 col1\" >0.015583</td>\n",
       "      <td id=\"T_e56ec_row21_col2\" class=\"data row21 col2\" >-0.002656</td>\n",
       "      <td id=\"T_e56ec_row21_col3\" class=\"data row21 col3\" >-0.007242</td>\n",
       "      <td id=\"T_e56ec_row21_col4\" class=\"data row21 col4\" >-0.009658</td>\n",
       "      <td id=\"T_e56ec_row21_col5\" class=\"data row21 col5\" >-0.021602</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row22\" class=\"row_heading level0 row22\" >2</th>\n",
       "      <td id=\"T_e56ec_row22_col0\" class=\"data row22 col0\" >-0.000018</td>\n",
       "      <td id=\"T_e56ec_row22_col1\" class=\"data row22 col1\" >0.015565</td>\n",
       "      <td id=\"T_e56ec_row22_col2\" class=\"data row22 col2\" >0.000388</td>\n",
       "      <td id=\"T_e56ec_row22_col3\" class=\"data row22 col3\" >-0.006855</td>\n",
       "      <td id=\"T_e56ec_row22_col4\" class=\"data row22 col4\" >0.000346</td>\n",
       "      <td id=\"T_e56ec_row22_col5\" class=\"data row22 col5\" >-0.021256</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row23\" class=\"row_heading level0 row23\" >3</th>\n",
       "      <td id=\"T_e56ec_row23_col0\" class=\"data row23 col0\" >0.000148</td>\n",
       "      <td id=\"T_e56ec_row23_col1\" class=\"data row23 col1\" >0.015713</td>\n",
       "      <td id=\"T_e56ec_row23_col2\" class=\"data row23 col2\" >0.000748</td>\n",
       "      <td id=\"T_e56ec_row23_col3\" class=\"data row23 col3\" >-0.006107</td>\n",
       "      <td id=\"T_e56ec_row23_col4\" class=\"data row23 col4\" >0.000431</td>\n",
       "      <td id=\"T_e56ec_row23_col5\" class=\"data row23 col5\" >-0.020826</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row24\" class=\"row_heading level0 row24\" >4</th>\n",
       "      <td id=\"T_e56ec_row24_col0\" class=\"data row24 col0\" >0.000321</td>\n",
       "      <td id=\"T_e56ec_row24_col1\" class=\"data row24 col1\" >0.016034</td>\n",
       "      <td id=\"T_e56ec_row24_col2\" class=\"data row24 col2\" >0.000516</td>\n",
       "      <td id=\"T_e56ec_row24_col3\" class=\"data row24 col3\" >-0.005590</td>\n",
       "      <td id=\"T_e56ec_row24_col4\" class=\"data row24 col4\" >-0.000577</td>\n",
       "      <td id=\"T_e56ec_row24_col5\" class=\"data row24 col5\" >-0.021403</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row25\" class=\"row_heading level0 row25\" >5</th>\n",
       "      <td id=\"T_e56ec_row25_col0\" class=\"data row25 col0\" >0.000516</td>\n",
       "      <td id=\"T_e56ec_row25_col1\" class=\"data row25 col1\" >0.016550</td>\n",
       "      <td id=\"T_e56ec_row25_col2\" class=\"data row25 col2\" >0.000003</td>\n",
       "      <td id=\"T_e56ec_row25_col3\" class=\"data row25 col3\" >-0.005588</td>\n",
       "      <td id=\"T_e56ec_row25_col4\" class=\"data row25 col4\" >0.000281</td>\n",
       "      <td id=\"T_e56ec_row25_col5\" class=\"data row25 col5\" >-0.021121</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row26\" class=\"row_heading level0 row26\" >6</th>\n",
       "      <td id=\"T_e56ec_row26_col0\" class=\"data row26 col0\" >0.000464</td>\n",
       "      <td id=\"T_e56ec_row26_col1\" class=\"data row26 col1\" >0.017014</td>\n",
       "      <td id=\"T_e56ec_row26_col2\" class=\"data row26 col2\" >0.000462</td>\n",
       "      <td id=\"T_e56ec_row26_col3\" class=\"data row26 col3\" >-0.005126</td>\n",
       "      <td id=\"T_e56ec_row26_col4\" class=\"data row26 col4\" >0.000780</td>\n",
       "      <td id=\"T_e56ec_row26_col5\" class=\"data row26 col5\" >-0.020342</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row27\" class=\"row_heading level0 row27\" >7</th>\n",
       "      <td id=\"T_e56ec_row27_col0\" class=\"data row27 col0\" >0.000734</td>\n",
       "      <td id=\"T_e56ec_row27_col1\" class=\"data row27 col1\" >0.017748</td>\n",
       "      <td id=\"T_e56ec_row27_col2\" class=\"data row27 col2\" >0.000476</td>\n",
       "      <td id=\"T_e56ec_row27_col3\" class=\"data row27 col3\" >-0.004649</td>\n",
       "      <td id=\"T_e56ec_row27_col4\" class=\"data row27 col4\" >-0.000134</td>\n",
       "      <td id=\"T_e56ec_row27_col5\" class=\"data row27 col5\" >-0.020476</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row28\" class=\"row_heading level0 row28\" >8</th>\n",
       "      <td id=\"T_e56ec_row28_col0\" class=\"data row28 col0\" >0.000506</td>\n",
       "      <td id=\"T_e56ec_row28_col1\" class=\"data row28 col1\" >0.018254</td>\n",
       "      <td id=\"T_e56ec_row28_col2\" class=\"data row28 col2\" >-0.000430</td>\n",
       "      <td id=\"T_e56ec_row28_col3\" class=\"data row28 col3\" >-0.005080</td>\n",
       "      <td id=\"T_e56ec_row28_col4\" class=\"data row28 col4\" >0.000440</td>\n",
       "      <td id=\"T_e56ec_row28_col5\" class=\"data row28 col5\" >-0.020036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row29\" class=\"row_heading level0 row29\" >9</th>\n",
       "      <td id=\"T_e56ec_row29_col0\" class=\"data row29 col0\" >0.000574</td>\n",
       "      <td id=\"T_e56ec_row29_col1\" class=\"data row29 col1\" >0.018828</td>\n",
       "      <td id=\"T_e56ec_row29_col2\" class=\"data row29 col2\" >-0.000555</td>\n",
       "      <td id=\"T_e56ec_row29_col3\" class=\"data row29 col3\" >-0.005634</td>\n",
       "      <td id=\"T_e56ec_row29_col4\" class=\"data row29 col4\" >0.000038</td>\n",
       "      <td id=\"T_e56ec_row29_col5\" class=\"data row29 col5\" >-0.019998</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row30\" class=\"row_heading level0 row30\" >10</th>\n",
       "      <td id=\"T_e56ec_row30_col0\" class=\"data row30 col0\" >0.000028</td>\n",
       "      <td id=\"T_e56ec_row30_col1\" class=\"data row30 col1\" >0.018856</td>\n",
       "      <td id=\"T_e56ec_row30_col2\" class=\"data row30 col2\" >0.000256</td>\n",
       "      <td id=\"T_e56ec_row30_col3\" class=\"data row30 col3\" >-0.005379</td>\n",
       "      <td id=\"T_e56ec_row30_col4\" class=\"data row30 col4\" >0.000292</td>\n",
       "      <td id=\"T_e56ec_row30_col5\" class=\"data row30 col5\" >-0.019706</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row31\" class=\"row_heading level0 row31\" >11</th>\n",
       "      <td id=\"T_e56ec_row31_col0\" class=\"data row31 col0\" >0.000490</td>\n",
       "      <td id=\"T_e56ec_row31_col1\" class=\"data row31 col1\" >0.019346</td>\n",
       "      <td id=\"T_e56ec_row31_col2\" class=\"data row31 col2\" >0.000351</td>\n",
       "      <td id=\"T_e56ec_row31_col3\" class=\"data row31 col3\" >-0.005028</td>\n",
       "      <td id=\"T_e56ec_row31_col4\" class=\"data row31 col4\" >0.001341</td>\n",
       "      <td id=\"T_e56ec_row31_col5\" class=\"data row31 col5\" >-0.018365</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row32\" class=\"row_heading level0 row32\" >12</th>\n",
       "      <td id=\"T_e56ec_row32_col0\" class=\"data row32 col0\" >0.000762</td>\n",
       "      <td id=\"T_e56ec_row32_col1\" class=\"data row32 col1\" >0.020108</td>\n",
       "      <td id=\"T_e56ec_row32_col2\" class=\"data row32 col2\" >0.001035</td>\n",
       "      <td id=\"T_e56ec_row32_col3\" class=\"data row32 col3\" >-0.003993</td>\n",
       "      <td id=\"T_e56ec_row32_col4\" class=\"data row32 col4\" >0.000695</td>\n",
       "      <td id=\"T_e56ec_row32_col5\" class=\"data row32 col5\" >-0.017670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row33\" class=\"row_heading level0 row33\" >13</th>\n",
       "      <td id=\"T_e56ec_row33_col0\" class=\"data row33 col0\" >0.000708</td>\n",
       "      <td id=\"T_e56ec_row33_col1\" class=\"data row33 col1\" >0.020817</td>\n",
       "      <td id=\"T_e56ec_row33_col2\" class=\"data row33 col2\" >0.000234</td>\n",
       "      <td id=\"T_e56ec_row33_col3\" class=\"data row33 col3\" >-0.003759</td>\n",
       "      <td id=\"T_e56ec_row33_col4\" class=\"data row33 col4\" >0.000412</td>\n",
       "      <td id=\"T_e56ec_row33_col5\" class=\"data row33 col5\" >-0.017258</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row34\" class=\"row_heading level0 row34\" >14</th>\n",
       "      <td id=\"T_e56ec_row34_col0\" class=\"data row34 col0\" >0.000275</td>\n",
       "      <td id=\"T_e56ec_row34_col1\" class=\"data row34 col1\" >0.021092</td>\n",
       "      <td id=\"T_e56ec_row34_col2\" class=\"data row34 col2\" >0.000652</td>\n",
       "      <td id=\"T_e56ec_row34_col3\" class=\"data row34 col3\" >-0.003107</td>\n",
       "      <td id=\"T_e56ec_row34_col4\" class=\"data row34 col4\" >-0.000592</td>\n",
       "      <td id=\"T_e56ec_row34_col5\" class=\"data row34 col5\" >-0.017850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row35\" class=\"row_heading level0 row35\" >15</th>\n",
       "      <td id=\"T_e56ec_row35_col0\" class=\"data row35 col0\" >-0.000221</td>\n",
       "      <td id=\"T_e56ec_row35_col1\" class=\"data row35 col1\" >0.020871</td>\n",
       "      <td id=\"T_e56ec_row35_col2\" class=\"data row35 col2\" >-0.000431</td>\n",
       "      <td id=\"T_e56ec_row35_col3\" class=\"data row35 col3\" >-0.003538</td>\n",
       "      <td id=\"T_e56ec_row35_col4\" class=\"data row35 col4\" >-0.001001</td>\n",
       "      <td id=\"T_e56ec_row35_col5\" class=\"data row35 col5\" >-0.018851</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row36\" class=\"row_heading level0 row36\" >16</th>\n",
       "      <td id=\"T_e56ec_row36_col0\" class=\"data row36 col0\" >0.000092</td>\n",
       "      <td id=\"T_e56ec_row36_col1\" class=\"data row36 col1\" >0.020963</td>\n",
       "      <td id=\"T_e56ec_row36_col2\" class=\"data row36 col2\" >0.000484</td>\n",
       "      <td id=\"T_e56ec_row36_col3\" class=\"data row36 col3\" >-0.003054</td>\n",
       "      <td id=\"T_e56ec_row36_col4\" class=\"data row36 col4\" >-0.000303</td>\n",
       "      <td id=\"T_e56ec_row36_col5\" class=\"data row36 col5\" >-0.019153</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row37\" class=\"row_heading level0 row37\" >17</th>\n",
       "      <td id=\"T_e56ec_row37_col0\" class=\"data row37 col0\" >-0.000380</td>\n",
       "      <td id=\"T_e56ec_row37_col1\" class=\"data row37 col1\" >0.020584</td>\n",
       "      <td id=\"T_e56ec_row37_col2\" class=\"data row37 col2\" >0.000523</td>\n",
       "      <td id=\"T_e56ec_row37_col3\" class=\"data row37 col3\" >-0.002531</td>\n",
       "      <td id=\"T_e56ec_row37_col4\" class=\"data row37 col4\" >-0.000759</td>\n",
       "      <td id=\"T_e56ec_row37_col5\" class=\"data row37 col5\" >-0.019912</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row38\" class=\"row_heading level0 row38\" >18</th>\n",
       "      <td id=\"T_e56ec_row38_col0\" class=\"data row38 col0\" >0.000044</td>\n",
       "      <td id=\"T_e56ec_row38_col1\" class=\"data row38 col1\" >0.020628</td>\n",
       "      <td id=\"T_e56ec_row38_col2\" class=\"data row38 col2\" >0.000613</td>\n",
       "      <td id=\"T_e56ec_row38_col3\" class=\"data row38 col3\" >-0.001919</td>\n",
       "      <td id=\"T_e56ec_row38_col4\" class=\"data row38 col4\" >-0.000509</td>\n",
       "      <td id=\"T_e56ec_row38_col5\" class=\"data row38 col5\" >-0.020421</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row39\" class=\"row_heading level0 row39\" >19</th>\n",
       "      <td id=\"T_e56ec_row39_col0\" class=\"data row39 col0\" >0.000365</td>\n",
       "      <td id=\"T_e56ec_row39_col1\" class=\"data row39 col1\" >0.020993</td>\n",
       "      <td id=\"T_e56ec_row39_col2\" class=\"data row39 col2\" >-0.000114</td>\n",
       "      <td id=\"T_e56ec_row39_col3\" class=\"data row39 col3\" >-0.002032</td>\n",
       "      <td id=\"T_e56ec_row39_col4\" class=\"data row39 col4\" >0.000286</td>\n",
       "      <td id=\"T_e56ec_row39_col5\" class=\"data row39 col5\" >-0.020136</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_e56ec_level0_row40\" class=\"row_heading level0 row40\" >20</th>\n",
       "      <td id=\"T_e56ec_row40_col0\" class=\"data row40 col0\" >-0.000368</td>\n",
       "      <td id=\"T_e56ec_row40_col1\" class=\"data row40 col1\" >0.020625</td>\n",
       "      <td id=\"T_e56ec_row40_col2\" class=\"data row40 col2\" >0.000001</td>\n",
       "      <td id=\"T_e56ec_row40_col3\" class=\"data row40 col3\" >-0.002031</td>\n",
       "      <td id=\"T_e56ec_row40_col4\" class=\"data row40 col4\" >-0.001401</td>\n",
       "      <td id=\"T_e56ec_row40_col5\" class=\"data row40 col5\" >-0.021537</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7fd6a40cded0>"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "CMRM_table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style type=\"text/css\">\n",
       "#T_a6111 caption {\n",
       "  font-size: 200%;\n",
       "}\n",
       "</style>\n",
       "<table id=\"T_a6111\">\n",
       "  <caption>Market Model</caption>\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th class=\"blank level0\" >&nbsp;</th>\n",
       "      <th id=\"T_a6111_level0_col0\" class=\"col_heading level0 col0\" colspan=\"2\">Good News</th>\n",
       "      <th id=\"T_a6111_level0_col2\" class=\"col_heading level0 col2\" colspan=\"2\">No News</th>\n",
       "      <th id=\"T_a6111_level0_col4\" class=\"col_heading level0 col4\" colspan=\"2\">Bad News</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th class=\"blank level1\" >&nbsp;</th>\n",
       "      <th id=\"T_a6111_level1_col0\" class=\"col_heading level1 col0\" >AR MM</th>\n",
       "      <th id=\"T_a6111_level1_col1\" class=\"col_heading level1 col1\" >CAR MM</th>\n",
       "      <th id=\"T_a6111_level1_col2\" class=\"col_heading level1 col2\" >AR MM</th>\n",
       "      <th id=\"T_a6111_level1_col3\" class=\"col_heading level1 col3\" >CAR MM</th>\n",
       "      <th id=\"T_a6111_level1_col4\" class=\"col_heading level1 col4\" >AR MM</th>\n",
       "      <th id=\"T_a6111_level1_col5\" class=\"col_heading level1 col5\" >CAR MM</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th class=\"index_name level0\" >event window</th>\n",
       "      <th class=\"blank col0\" >&nbsp;</th>\n",
       "      <th class=\"blank col1\" >&nbsp;</th>\n",
       "      <th class=\"blank col2\" >&nbsp;</th>\n",
       "      <th class=\"blank col3\" >&nbsp;</th>\n",
       "      <th class=\"blank col4\" >&nbsp;</th>\n",
       "      <th class=\"blank col5\" >&nbsp;</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row0\" class=\"row_heading level0 row0\" >-20</th>\n",
       "      <td id=\"T_a6111_row0_col0\" class=\"data row0 col0\" >0.000063</td>\n",
       "      <td id=\"T_a6111_row0_col1\" class=\"data row0 col1\" >0.000063</td>\n",
       "      <td id=\"T_a6111_row0_col2\" class=\"data row0 col2\" >0.000254</td>\n",
       "      <td id=\"T_a6111_row0_col3\" class=\"data row0 col3\" >0.000254</td>\n",
       "      <td id=\"T_a6111_row0_col4\" class=\"data row0 col4\" >0.000253</td>\n",
       "      <td id=\"T_a6111_row0_col5\" class=\"data row0 col5\" >0.000253</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row1\" class=\"row_heading level0 row1\" >-19</th>\n",
       "      <td id=\"T_a6111_row1_col0\" class=\"data row1 col0\" >-0.000099</td>\n",
       "      <td id=\"T_a6111_row1_col1\" class=\"data row1 col1\" >-0.000036</td>\n",
       "      <td id=\"T_a6111_row1_col2\" class=\"data row1 col2\" >-0.000298</td>\n",
       "      <td id=\"T_a6111_row1_col3\" class=\"data row1 col3\" >-0.000044</td>\n",
       "      <td id=\"T_a6111_row1_col4\" class=\"data row1 col4\" >0.000989</td>\n",
       "      <td id=\"T_a6111_row1_col5\" class=\"data row1 col5\" >0.001243</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row2\" class=\"row_heading level0 row2\" >-18</th>\n",
       "      <td id=\"T_a6111_row2_col0\" class=\"data row2 col0\" >0.000171</td>\n",
       "      <td id=\"T_a6111_row2_col1\" class=\"data row2 col1\" >0.000134</td>\n",
       "      <td id=\"T_a6111_row2_col2\" class=\"data row2 col2\" >-0.000573</td>\n",
       "      <td id=\"T_a6111_row2_col3\" class=\"data row2 col3\" >-0.000617</td>\n",
       "      <td id=\"T_a6111_row2_col4\" class=\"data row2 col4\" >-0.000714</td>\n",
       "      <td id=\"T_a6111_row2_col5\" class=\"data row2 col5\" >0.000529</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row3\" class=\"row_heading level0 row3\" >-17</th>\n",
       "      <td id=\"T_a6111_row3_col0\" class=\"data row3 col0\" >-0.000056</td>\n",
       "      <td id=\"T_a6111_row3_col1\" class=\"data row3 col1\" >0.000078</td>\n",
       "      <td id=\"T_a6111_row3_col2\" class=\"data row3 col2\" >-0.000005</td>\n",
       "      <td id=\"T_a6111_row3_col3\" class=\"data row3 col3\" >-0.000622</td>\n",
       "      <td id=\"T_a6111_row3_col4\" class=\"data row3 col4\" >0.001013</td>\n",
       "      <td id=\"T_a6111_row3_col5\" class=\"data row3 col5\" >0.001542</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row4\" class=\"row_heading level0 row4\" >-16</th>\n",
       "      <td id=\"T_a6111_row4_col0\" class=\"data row4 col0\" >0.000235</td>\n",
       "      <td id=\"T_a6111_row4_col1\" class=\"data row4 col1\" >0.000313</td>\n",
       "      <td id=\"T_a6111_row4_col2\" class=\"data row4 col2\" >-0.000738</td>\n",
       "      <td id=\"T_a6111_row4_col3\" class=\"data row4 col3\" >-0.001360</td>\n",
       "      <td id=\"T_a6111_row4_col4\" class=\"data row4 col4\" >-0.000506</td>\n",
       "      <td id=\"T_a6111_row4_col5\" class=\"data row4 col5\" >0.001036</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row5\" class=\"row_heading level0 row5\" >-15</th>\n",
       "      <td id=\"T_a6111_row5_col0\" class=\"data row5 col0\" >0.000370</td>\n",
       "      <td id=\"T_a6111_row5_col1\" class=\"data row5 col1\" >0.000683</td>\n",
       "      <td id=\"T_a6111_row5_col2\" class=\"data row5 col2\" >-0.000126</td>\n",
       "      <td id=\"T_a6111_row5_col3\" class=\"data row5 col3\" >-0.001486</td>\n",
       "      <td id=\"T_a6111_row5_col4\" class=\"data row5 col4\" >0.000397</td>\n",
       "      <td id=\"T_a6111_row5_col5\" class=\"data row5 col5\" >0.001433</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row6\" class=\"row_heading level0 row6\" >-14</th>\n",
       "      <td id=\"T_a6111_row6_col0\" class=\"data row6 col0\" >0.000271</td>\n",
       "      <td id=\"T_a6111_row6_col1\" class=\"data row6 col1\" >0.000955</td>\n",
       "      <td id=\"T_a6111_row6_col2\" class=\"data row6 col2\" >0.000961</td>\n",
       "      <td id=\"T_a6111_row6_col3\" class=\"data row6 col3\" >-0.000525</td>\n",
       "      <td id=\"T_a6111_row6_col4\" class=\"data row6 col4\" >-0.000173</td>\n",
       "      <td id=\"T_a6111_row6_col5\" class=\"data row6 col5\" >0.001260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row7\" class=\"row_heading level0 row7\" >-13</th>\n",
       "      <td id=\"T_a6111_row7_col0\" class=\"data row7 col0\" >-0.000011</td>\n",
       "      <td id=\"T_a6111_row7_col1\" class=\"data row7 col1\" >0.000944</td>\n",
       "      <td id=\"T_a6111_row7_col2\" class=\"data row7 col2\" >-0.000193</td>\n",
       "      <td id=\"T_a6111_row7_col3\" class=\"data row7 col3\" >-0.000718</td>\n",
       "      <td id=\"T_a6111_row7_col4\" class=\"data row7 col4\" >-0.000470</td>\n",
       "      <td id=\"T_a6111_row7_col5\" class=\"data row7 col5\" >0.000790</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row8\" class=\"row_heading level0 row8\" >-12</th>\n",
       "      <td id=\"T_a6111_row8_col0\" class=\"data row8 col0\" >0.000240</td>\n",
       "      <td id=\"T_a6111_row8_col1\" class=\"data row8 col1\" >0.001183</td>\n",
       "      <td id=\"T_a6111_row8_col2\" class=\"data row8 col2\" >0.000081</td>\n",
       "      <td id=\"T_a6111_row8_col3\" class=\"data row8 col3\" >-0.000637</td>\n",
       "      <td id=\"T_a6111_row8_col4\" class=\"data row8 col4\" >-0.001400</td>\n",
       "      <td id=\"T_a6111_row8_col5\" class=\"data row8 col5\" >-0.000610</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row9\" class=\"row_heading level0 row9\" >-11</th>\n",
       "      <td id=\"T_a6111_row9_col0\" class=\"data row9 col0\" >0.000320</td>\n",
       "      <td id=\"T_a6111_row9_col1\" class=\"data row9 col1\" >0.001504</td>\n",
       "      <td id=\"T_a6111_row9_col2\" class=\"data row9 col2\" >0.000277</td>\n",
       "      <td id=\"T_a6111_row9_col3\" class=\"data row9 col3\" >-0.000360</td>\n",
       "      <td id=\"T_a6111_row9_col4\" class=\"data row9 col4\" >-0.000279</td>\n",
       "      <td id=\"T_a6111_row9_col5\" class=\"data row9 col5\" >-0.000889</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row10\" class=\"row_heading level0 row10\" >-10</th>\n",
       "      <td id=\"T_a6111_row10_col0\" class=\"data row10 col0\" >0.000160</td>\n",
       "      <td id=\"T_a6111_row10_col1\" class=\"data row10 col1\" >0.001663</td>\n",
       "      <td id=\"T_a6111_row10_col2\" class=\"data row10 col2\" >0.000232</td>\n",
       "      <td id=\"T_a6111_row10_col3\" class=\"data row10 col3\" >-0.000128</td>\n",
       "      <td id=\"T_a6111_row10_col4\" class=\"data row10 col4\" >-0.000100</td>\n",
       "      <td id=\"T_a6111_row10_col5\" class=\"data row10 col5\" >-0.000990</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row11\" class=\"row_heading level0 row11\" >-9</th>\n",
       "      <td id=\"T_a6111_row11_col0\" class=\"data row11 col0\" >0.000931</td>\n",
       "      <td id=\"T_a6111_row11_col1\" class=\"data row11 col1\" >0.002595</td>\n",
       "      <td id=\"T_a6111_row11_col2\" class=\"data row11 col2\" >0.000362</td>\n",
       "      <td id=\"T_a6111_row11_col3\" class=\"data row11 col3\" >0.000234</td>\n",
       "      <td id=\"T_a6111_row11_col4\" class=\"data row11 col4\" >-0.000237</td>\n",
       "      <td id=\"T_a6111_row11_col5\" class=\"data row11 col5\" >-0.001227</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row12\" class=\"row_heading level0 row12\" >-8</th>\n",
       "      <td id=\"T_a6111_row12_col0\" class=\"data row12 col0\" >-0.000112</td>\n",
       "      <td id=\"T_a6111_row12_col1\" class=\"data row12 col1\" >0.002483</td>\n",
       "      <td id=\"T_a6111_row12_col2\" class=\"data row12 col2\" >-0.000351</td>\n",
       "      <td id=\"T_a6111_row12_col3\" class=\"data row12 col3\" >-0.000117</td>\n",
       "      <td id=\"T_a6111_row12_col4\" class=\"data row12 col4\" >0.000625</td>\n",
       "      <td id=\"T_a6111_row12_col5\" class=\"data row12 col5\" >-0.000602</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row13\" class=\"row_heading level0 row13\" >-7</th>\n",
       "      <td id=\"T_a6111_row13_col0\" class=\"data row13 col0\" >0.000384</td>\n",
       "      <td id=\"T_a6111_row13_col1\" class=\"data row13 col1\" >0.002867</td>\n",
       "      <td id=\"T_a6111_row13_col2\" class=\"data row13 col2\" >0.000016</td>\n",
       "      <td id=\"T_a6111_row13_col3\" class=\"data row13 col3\" >-0.000101</td>\n",
       "      <td id=\"T_a6111_row13_col4\" class=\"data row13 col4\" >-0.000814</td>\n",
       "      <td id=\"T_a6111_row13_col5\" class=\"data row13 col5\" >-0.001416</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row14\" class=\"row_heading level0 row14\" >-6</th>\n",
       "      <td id=\"T_a6111_row14_col0\" class=\"data row14 col0\" >0.000155</td>\n",
       "      <td id=\"T_a6111_row14_col1\" class=\"data row14 col1\" >0.003022</td>\n",
       "      <td id=\"T_a6111_row14_col2\" class=\"data row14 col2\" >0.000164</td>\n",
       "      <td id=\"T_a6111_row14_col3\" class=\"data row14 col3\" >0.000063</td>\n",
       "      <td id=\"T_a6111_row14_col4\" class=\"data row14 col4\" >0.000301</td>\n",
       "      <td id=\"T_a6111_row14_col5\" class=\"data row14 col5\" >-0.001115</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row15\" class=\"row_heading level0 row15\" >-5</th>\n",
       "      <td id=\"T_a6111_row15_col0\" class=\"data row15 col0\" >0.000022</td>\n",
       "      <td id=\"T_a6111_row15_col1\" class=\"data row15 col1\" >0.003044</td>\n",
       "      <td id=\"T_a6111_row15_col2\" class=\"data row15 col2\" >0.000409</td>\n",
       "      <td id=\"T_a6111_row15_col3\" class=\"data row15 col3\" >0.000472</td>\n",
       "      <td id=\"T_a6111_row15_col4\" class=\"data row15 col4\" >-0.001098</td>\n",
       "      <td id=\"T_a6111_row15_col5\" class=\"data row15 col5\" >-0.002212</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row16\" class=\"row_heading level0 row16\" >-4</th>\n",
       "      <td id=\"T_a6111_row16_col0\" class=\"data row16 col0\" >-0.000014</td>\n",
       "      <td id=\"T_a6111_row16_col1\" class=\"data row16 col1\" >0.003030</td>\n",
       "      <td id=\"T_a6111_row16_col2\" class=\"data row16 col2\" >-0.000549</td>\n",
       "      <td id=\"T_a6111_row16_col3\" class=\"data row16 col3\" >-0.000077</td>\n",
       "      <td id=\"T_a6111_row16_col4\" class=\"data row16 col4\" >0.000140</td>\n",
       "      <td id=\"T_a6111_row16_col5\" class=\"data row16 col5\" >-0.002072</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row17\" class=\"row_heading level0 row17\" >-3</th>\n",
       "      <td id=\"T_a6111_row17_col0\" class=\"data row17 col0\" >0.000228</td>\n",
       "      <td id=\"T_a6111_row17_col1\" class=\"data row17 col1\" >0.003258</td>\n",
       "      <td id=\"T_a6111_row17_col2\" class=\"data row17 col2\" >-0.000181</td>\n",
       "      <td id=\"T_a6111_row17_col3\" class=\"data row17 col3\" >-0.000258</td>\n",
       "      <td id=\"T_a6111_row17_col4\" class=\"data row17 col4\" >0.000427</td>\n",
       "      <td id=\"T_a6111_row17_col5\" class=\"data row17 col5\" >-0.001646</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row18\" class=\"row_heading level0 row18\" >-2</th>\n",
       "      <td id=\"T_a6111_row18_col0\" class=\"data row18 col0\" >-0.000334</td>\n",
       "      <td id=\"T_a6111_row18_col1\" class=\"data row18 col1\" >0.002924</td>\n",
       "      <td id=\"T_a6111_row18_col2\" class=\"data row18 col2\" >-0.000251</td>\n",
       "      <td id=\"T_a6111_row18_col3\" class=\"data row18 col3\" >-0.000509</td>\n",
       "      <td id=\"T_a6111_row18_col4\" class=\"data row18 col4\" >-0.000537</td>\n",
       "      <td id=\"T_a6111_row18_col5\" class=\"data row18 col5\" >-0.002182</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row19\" class=\"row_heading level0 row19\" >-1</th>\n",
       "      <td id=\"T_a6111_row19_col0\" class=\"data row19 col0\" >-0.000236</td>\n",
       "      <td id=\"T_a6111_row19_col1\" class=\"data row19 col1\" >0.002688</td>\n",
       "      <td id=\"T_a6111_row19_col2\" class=\"data row19 col2\" >-0.000654</td>\n",
       "      <td id=\"T_a6111_row19_col3\" class=\"data row19 col3\" >-0.001163</td>\n",
       "      <td id=\"T_a6111_row19_col4\" class=\"data row19 col4\" >-0.000724</td>\n",
       "      <td id=\"T_a6111_row19_col5\" class=\"data row19 col5\" >-0.002906</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row20\" class=\"row_heading level0 row20\" >0</th>\n",
       "      <td id=\"T_a6111_row20_col0\" class=\"data row20 col0\" >0.007198</td>\n",
       "      <td id=\"T_a6111_row20_col1\" class=\"data row20 col1\" >0.009886</td>\n",
       "      <td id=\"T_a6111_row20_col2\" class=\"data row20 col2\" >-0.003616</td>\n",
       "      <td id=\"T_a6111_row20_col3\" class=\"data row20 col3\" >-0.004779</td>\n",
       "      <td id=\"T_a6111_row20_col4\" class=\"data row20 col4\" >-0.010808</td>\n",
       "      <td id=\"T_a6111_row20_col5\" class=\"data row20 col5\" >-0.013714</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row21\" class=\"row_heading level0 row21\" >1</th>\n",
       "      <td id=\"T_a6111_row21_col0\" class=\"data row21 col0\" >0.004949</td>\n",
       "      <td id=\"T_a6111_row21_col1\" class=\"data row21 col1\" >0.014836</td>\n",
       "      <td id=\"T_a6111_row21_col2\" class=\"data row21 col2\" >-0.002737</td>\n",
       "      <td id=\"T_a6111_row21_col3\" class=\"data row21 col3\" >-0.007516</td>\n",
       "      <td id=\"T_a6111_row21_col4\" class=\"data row21 col4\" >-0.009811</td>\n",
       "      <td id=\"T_a6111_row21_col5\" class=\"data row21 col5\" >-0.023525</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row22\" class=\"row_heading level0 row22\" >2</th>\n",
       "      <td id=\"T_a6111_row22_col0\" class=\"data row22 col0\" >-0.000335</td>\n",
       "      <td id=\"T_a6111_row22_col1\" class=\"data row22 col1\" >0.014501</td>\n",
       "      <td id=\"T_a6111_row22_col2\" class=\"data row22 col2\" >0.000420</td>\n",
       "      <td id=\"T_a6111_row22_col3\" class=\"data row22 col3\" >-0.007096</td>\n",
       "      <td id=\"T_a6111_row22_col4\" class=\"data row22 col4\" >-0.000173</td>\n",
       "      <td id=\"T_a6111_row22_col5\" class=\"data row22 col5\" >-0.023698</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row23\" class=\"row_heading level0 row23\" >3</th>\n",
       "      <td id=\"T_a6111_row23_col0\" class=\"data row23 col0\" >-0.000237</td>\n",
       "      <td id=\"T_a6111_row23_col1\" class=\"data row23 col1\" >0.014264</td>\n",
       "      <td id=\"T_a6111_row23_col2\" class=\"data row23 col2\" >0.000064</td>\n",
       "      <td id=\"T_a6111_row23_col3\" class=\"data row23 col3\" >-0.007033</td>\n",
       "      <td id=\"T_a6111_row23_col4\" class=\"data row23 col4\" >-0.000381</td>\n",
       "      <td id=\"T_a6111_row23_col5\" class=\"data row23 col5\" >-0.024079</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row24\" class=\"row_heading level0 row24\" >4</th>\n",
       "      <td id=\"T_a6111_row24_col0\" class=\"data row24 col0\" >0.000348</td>\n",
       "      <td id=\"T_a6111_row24_col1\" class=\"data row24 col1\" >0.014612</td>\n",
       "      <td id=\"T_a6111_row24_col2\" class=\"data row24 col2\" >0.000114</td>\n",
       "      <td id=\"T_a6111_row24_col3\" class=\"data row24 col3\" >-0.006918</td>\n",
       "      <td id=\"T_a6111_row24_col4\" class=\"data row24 col4\" >-0.000940</td>\n",
       "      <td id=\"T_a6111_row24_col5\" class=\"data row24 col5\" >-0.025020</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row25\" class=\"row_heading level0 row25\" >5</th>\n",
       "      <td id=\"T_a6111_row25_col0\" class=\"data row25 col0\" >0.000552</td>\n",
       "      <td id=\"T_a6111_row25_col1\" class=\"data row25 col1\" >0.015164</td>\n",
       "      <td id=\"T_a6111_row25_col2\" class=\"data row25 col2\" >0.000391</td>\n",
       "      <td id=\"T_a6111_row25_col3\" class=\"data row25 col3\" >-0.006527</td>\n",
       "      <td id=\"T_a6111_row25_col4\" class=\"data row25 col4\" >0.000115</td>\n",
       "      <td id=\"T_a6111_row25_col5\" class=\"data row25 col5\" >-0.024904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row26\" class=\"row_heading level0 row26\" >6</th>\n",
       "      <td id=\"T_a6111_row26_col0\" class=\"data row26 col0\" >-0.000131</td>\n",
       "      <td id=\"T_a6111_row26_col1\" class=\"data row26 col1\" >0.015034</td>\n",
       "      <td id=\"T_a6111_row26_col2\" class=\"data row26 col2\" >-0.000056</td>\n",
       "      <td id=\"T_a6111_row26_col3\" class=\"data row26 col3\" >-0.006583</td>\n",
       "      <td id=\"T_a6111_row26_col4\" class=\"data row26 col4\" >0.000012</td>\n",
       "      <td id=\"T_a6111_row26_col5\" class=\"data row26 col5\" >-0.024892</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row27\" class=\"row_heading level0 row27\" >7</th>\n",
       "      <td id=\"T_a6111_row27_col0\" class=\"data row27 col0\" >0.000046</td>\n",
       "      <td id=\"T_a6111_row27_col1\" class=\"data row27 col1\" >0.015080</td>\n",
       "      <td id=\"T_a6111_row27_col2\" class=\"data row27 col2\" >-0.000001</td>\n",
       "      <td id=\"T_a6111_row27_col3\" class=\"data row27 col3\" >-0.006585</td>\n",
       "      <td id=\"T_a6111_row27_col4\" class=\"data row27 col4\" >-0.000570</td>\n",
       "      <td id=\"T_a6111_row27_col5\" class=\"data row27 col5\" >-0.025462</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row28\" class=\"row_heading level0 row28\" >8</th>\n",
       "      <td id=\"T_a6111_row28_col0\" class=\"data row28 col0\" >0.000013</td>\n",
       "      <td id=\"T_a6111_row28_col1\" class=\"data row28 col1\" >0.015093</td>\n",
       "      <td id=\"T_a6111_row28_col2\" class=\"data row28 col2\" >-0.000313</td>\n",
       "      <td id=\"T_a6111_row28_col3\" class=\"data row28 col3\" >-0.006898</td>\n",
       "      <td id=\"T_a6111_row28_col4\" class=\"data row28 col4\" >-0.000167</td>\n",
       "      <td id=\"T_a6111_row28_col5\" class=\"data row28 col5\" >-0.025629</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row29\" class=\"row_heading level0 row29\" >9</th>\n",
       "      <td id=\"T_a6111_row29_col0\" class=\"data row29 col0\" >0.000229</td>\n",
       "      <td id=\"T_a6111_row29_col1\" class=\"data row29 col1\" >0.015322</td>\n",
       "      <td id=\"T_a6111_row29_col2\" class=\"data row29 col2\" >-0.000470</td>\n",
       "      <td id=\"T_a6111_row29_col3\" class=\"data row29 col3\" >-0.007367</td>\n",
       "      <td id=\"T_a6111_row29_col4\" class=\"data row29 col4\" >-0.000171</td>\n",
       "      <td id=\"T_a6111_row29_col5\" class=\"data row29 col5\" >-0.025800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row30\" class=\"row_heading level0 row30\" >10</th>\n",
       "      <td id=\"T_a6111_row30_col0\" class=\"data row30 col0\" >0.000203</td>\n",
       "      <td id=\"T_a6111_row30_col1\" class=\"data row30 col1\" >0.015525</td>\n",
       "      <td id=\"T_a6111_row30_col2\" class=\"data row30 col2\" >0.000415</td>\n",
       "      <td id=\"T_a6111_row30_col3\" class=\"data row30 col3\" >-0.006952</td>\n",
       "      <td id=\"T_a6111_row30_col4\" class=\"data row30 col4\" >0.000422</td>\n",
       "      <td id=\"T_a6111_row30_col5\" class=\"data row30 col5\" >-0.025378</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row31\" class=\"row_heading level0 row31\" >11</th>\n",
       "      <td id=\"T_a6111_row31_col0\" class=\"data row31 col0\" >-0.000138</td>\n",
       "      <td id=\"T_a6111_row31_col1\" class=\"data row31 col1\" >0.015387</td>\n",
       "      <td id=\"T_a6111_row31_col2\" class=\"data row31 col2\" >0.000033</td>\n",
       "      <td id=\"T_a6111_row31_col3\" class=\"data row31 col3\" >-0.006919</td>\n",
       "      <td id=\"T_a6111_row31_col4\" class=\"data row31 col4\" >0.000992</td>\n",
       "      <td id=\"T_a6111_row31_col5\" class=\"data row31 col5\" >-0.024386</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row32\" class=\"row_heading level0 row32\" >12</th>\n",
       "      <td id=\"T_a6111_row32_col0\" class=\"data row32 col0\" >0.000083</td>\n",
       "      <td id=\"T_a6111_row32_col1\" class=\"data row32 col1\" >0.015470</td>\n",
       "      <td id=\"T_a6111_row32_col2\" class=\"data row32 col2\" >0.000152</td>\n",
       "      <td id=\"T_a6111_row32_col3\" class=\"data row32 col3\" >-0.006767</td>\n",
       "      <td id=\"T_a6111_row32_col4\" class=\"data row32 col4\" >0.000143</td>\n",
       "      <td id=\"T_a6111_row32_col5\" class=\"data row32 col5\" >-0.024243</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row33\" class=\"row_heading level0 row33\" >13</th>\n",
       "      <td id=\"T_a6111_row33_col0\" class=\"data row33 col0\" >0.000191</td>\n",
       "      <td id=\"T_a6111_row33_col1\" class=\"data row33 col1\" >0.015661</td>\n",
       "      <td id=\"T_a6111_row33_col2\" class=\"data row33 col2\" >0.000026</td>\n",
       "      <td id=\"T_a6111_row33_col3\" class=\"data row33 col3\" >-0.006741</td>\n",
       "      <td id=\"T_a6111_row33_col4\" class=\"data row33 col4\" >0.000120</td>\n",
       "      <td id=\"T_a6111_row33_col5\" class=\"data row33 col5\" >-0.024123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row34\" class=\"row_heading level0 row34\" >14</th>\n",
       "      <td id=\"T_a6111_row34_col0\" class=\"data row34 col0\" >-0.000133</td>\n",
       "      <td id=\"T_a6111_row34_col1\" class=\"data row34 col1\" >0.015529</td>\n",
       "      <td id=\"T_a6111_row34_col2\" class=\"data row34 col2\" >0.000252</td>\n",
       "      <td id=\"T_a6111_row34_col3\" class=\"data row34 col3\" >-0.006489</td>\n",
       "      <td id=\"T_a6111_row34_col4\" class=\"data row34 col4\" >-0.000764</td>\n",
       "      <td id=\"T_a6111_row34_col5\" class=\"data row34 col5\" >-0.024887</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row35\" class=\"row_heading level0 row35\" >15</th>\n",
       "      <td id=\"T_a6111_row35_col0\" class=\"data row35 col0\" >0.000025</td>\n",
       "      <td id=\"T_a6111_row35_col1\" class=\"data row35 col1\" >0.015554</td>\n",
       "      <td id=\"T_a6111_row35_col2\" class=\"data row35 col2\" >-0.000085</td>\n",
       "      <td id=\"T_a6111_row35_col3\" class=\"data row35 col3\" >-0.006574</td>\n",
       "      <td id=\"T_a6111_row35_col4\" class=\"data row35 col4\" >-0.000768</td>\n",
       "      <td id=\"T_a6111_row35_col5\" class=\"data row35 col5\" >-0.025655</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row36\" class=\"row_heading level0 row36\" >16</th>\n",
       "      <td id=\"T_a6111_row36_col0\" class=\"data row36 col0\" >-0.000265</td>\n",
       "      <td id=\"T_a6111_row36_col1\" class=\"data row36 col1\" >0.015288</td>\n",
       "      <td id=\"T_a6111_row36_col2\" class=\"data row36 col2\" >-0.000051</td>\n",
       "      <td id=\"T_a6111_row36_col3\" class=\"data row36 col3\" >-0.006624</td>\n",
       "      <td id=\"T_a6111_row36_col4\" class=\"data row36 col4\" >0.000113</td>\n",
       "      <td id=\"T_a6111_row36_col5\" class=\"data row36 col5\" >-0.025542</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row37\" class=\"row_heading level0 row37\" >17</th>\n",
       "      <td id=\"T_a6111_row37_col0\" class=\"data row37 col0\" >-0.000700</td>\n",
       "      <td id=\"T_a6111_row37_col1\" class=\"data row37 col1\" >0.014588</td>\n",
       "      <td id=\"T_a6111_row37_col2\" class=\"data row37 col2\" >0.000119</td>\n",
       "      <td id=\"T_a6111_row37_col3\" class=\"data row37 col3\" >-0.006505</td>\n",
       "      <td id=\"T_a6111_row37_col4\" class=\"data row37 col4\" >-0.000587</td>\n",
       "      <td id=\"T_a6111_row37_col5\" class=\"data row37 col5\" >-0.026129</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row38\" class=\"row_heading level0 row38\" >18</th>\n",
       "      <td id=\"T_a6111_row38_col0\" class=\"data row38 col0\" >-0.000168</td>\n",
       "      <td id=\"T_a6111_row38_col1\" class=\"data row38 col1\" >0.014421</td>\n",
       "      <td id=\"T_a6111_row38_col2\" class=\"data row38 col2\" >0.000222</td>\n",
       "      <td id=\"T_a6111_row38_col3\" class=\"data row38 col3\" >-0.006284</td>\n",
       "      <td id=\"T_a6111_row38_col4\" class=\"data row38 col4\" >-0.000543</td>\n",
       "      <td id=\"T_a6111_row38_col5\" class=\"data row38 col5\" >-0.026671</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row39\" class=\"row_heading level0 row39\" >19</th>\n",
       "      <td id=\"T_a6111_row39_col0\" class=\"data row39 col0\" >0.000223</td>\n",
       "      <td id=\"T_a6111_row39_col1\" class=\"data row39 col1\" >0.014644</td>\n",
       "      <td id=\"T_a6111_row39_col2\" class=\"data row39 col2\" >0.000026</td>\n",
       "      <td id=\"T_a6111_row39_col3\" class=\"data row39 col3\" >-0.006258</td>\n",
       "      <td id=\"T_a6111_row39_col4\" class=\"data row39 col4\" >0.000365</td>\n",
       "      <td id=\"T_a6111_row39_col5\" class=\"data row39 col5\" >-0.026306</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th id=\"T_a6111_level0_row40\" class=\"row_heading level0 row40\" >20</th>\n",
       "      <td id=\"T_a6111_row40_col0\" class=\"data row40 col0\" >-0.000290</td>\n",
       "      <td id=\"T_a6111_row40_col1\" class=\"data row40 col1\" >0.014354</td>\n",
       "      <td id=\"T_a6111_row40_col2\" class=\"data row40 col2\" >-0.000253</td>\n",
       "      <td id=\"T_a6111_row40_col3\" class=\"data row40 col3\" >-0.006511</td>\n",
       "      <td id=\"T_a6111_row40_col4\" class=\"data row40 col4\" >-0.000796</td>\n",
       "      <td id=\"T_a6111_row40_col5\" class=\"data row40 col5\" >-0.027102</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n"
      ],
      "text/plain": [
       "<pandas.io.formats.style.Styler at 0x7fd6a40ce590>"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "MM_table"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.10.8 ('HEC-FIN')",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  },
  "vscode": {
   "interpreter": {
    "hash": "f91dbb9907b52eae0c613c0928dd50911a4c75b14f7cb476822bfb142436ee27"
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
